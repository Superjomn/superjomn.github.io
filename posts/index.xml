<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Superjomn's blog</title><link>/posts/</link><description>Recent content in Posts on Superjomn's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 18 Apr 2023 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Apple TV 折腾记</title><link>/posts/apple-tv-as-service/</link><pubDate>Tue, 18 Apr 2023 00:00:00 +0000</pubDate><guid>/posts/apple-tv-as-service/</guid><description>&lt;p>由于房屋面积有限，我们的大厅一直没有安装电视。相反，我们使用了一个较大的LG 4K显示器作为娱乐中心，并搭配了两个巨大的Fyne落地音箱，效果不错。我们主要观看的节目是Netflix，晚上我们会和家人一起围在电脑旁边观看，感觉还不错。但是，将显示器用作电视存在一个问题，就是必须通过操作系统进行操作。由于我的职业是程序员，一旦接触电脑，就不由自主地敲击键盘，并且很容易进入工作模式，这对放松娱乐有些影响。&lt;/p>
&lt;p>因此，我开始考虑使用Apple TV作为我们的娱乐中心。我选择这个方案的原因如下：&lt;/p>
&lt;ol>
&lt;li>电视盒子本身可以提供完整的电视体验，操作相对简单，可以将电脑关闭以便更好地放松娱乐。&lt;/li>
&lt;li>Apple TV可以安装Netflix、Youtube等应用程序，支持我们现有的娱乐方式。&lt;/li>
&lt;li>它具有HDMI接口，完美兼容我们现有的4K显示器，并且在未来升级成电视时也不会有问题。&lt;/li>
&lt;/ol>
&lt;p>现在，我们家的娱乐系统已经成为一套完整的影音系统。下面是我使用Apple TV的Recipe和我的考虑，供大家参考。&lt;/p>
&lt;h2 id="apple-tv-本体">Apple TV 本体&lt;/h2>
&lt;p>Apple TV 本体还是挺便宜的，可能 Apple 真正挣钱的是 Itunes 这类订阅服务吧，硬件只是附带的。我买的型号是 &amp;ldquo;Apple 苹果TV电视21/22新款 TV6 4K机顶盒子TV 7代 5.0 A15仿生电视盒子 苹果TV7代 128GB WIFI+网线版 美版&amp;rdquo;，价格是 1379人民币，你可以在淘宝或者京东找到。&lt;/p>
&lt;h2 id="wifi路由器">Wifi路由器&lt;/h2>
&lt;p>接下来需要有一款可以科学上网的 Wifi 路由器，这类 Wifi 由于要安装固件以及 ShadowSocks APP，因此一般配置要高一些也贵一些。&lt;/p>
&lt;p>路由器一般要安装梅林固件，你最好了解下 &lt;a href="https://zhuanlan.zhihu.com/p/205303870">梅林固件到底是什么-zhihu&lt;/a>，只有华硕的一部分型号可以支持。&lt;/p>
&lt;p>我选择的是 &amp;ldquo;华硕（ASUS）RT-AX86U双频5700M全千兆电竞路由无线路由器/一键性能加速/2.5G端口/WiFi6路由/PS5网络加速&amp;rdquo;，同样你可以在京东或者淘宝找到这款路由器，拼多多或者咸鱼上有可能找到更便宜的价格。
这是一款中高端的路由器，性能应该有点过剩了，我之前计划利用它自带的 USB 接口搭建一个简易的 NAS，但考虑到 4GB 的单个文件限制，最终没有实施；目前这是一个欠开发的，比较奢侈的路由器。&lt;/p>
&lt;p>路由器连上网络后，需要刷梅林固件，这个网上教程很多，我参考比较多的是 &lt;a href="https://www.youtube.com/watch?v=TKP3w1tlxL0">这个&lt;/a>。 当然，前提是有个科学上网的 V&amp;amp;P&amp;amp;N，绑定到 WIFI 路由器中。&lt;/p>
&lt;p>激活网络后，Apple TV 连上 WIFI，现在你应该已经能够激活和使用 Apple TV 了。&lt;/p>
&lt;h2 id="音响dac的支持">音响DAC的支持&lt;/h2>
&lt;p>虽然Apple TV支持AirPlay音源输出，但如果家里的音响是类似于HomePod或其他支持的播放器，只需要在设置里进行添加，就可以正常使用了。然而，由于我家里有一套音响系统，有专门的DAC，所以使用AirPlay这类有损的传输就比较可惜了。因此，我找到了一款HDMI拆分音源信息到光纤的转换器，名为“毕亚兹 HDMI2.0音频分离器线 4K/60HZ高清视频7.1光纤/同轴/3.5mm音频转换器笔记本机顶盒连接电视音响 ZH136”，可以完美支持AURALIC这类播放器的光纤输入。
注意，这里特定的参数才能支持 4K 视频的输出。转换后的音质与电脑的USB相比没有明显的差别，对于电视节目已经足够了吧。&lt;/p>
&lt;h2 id="nas系统">NAS系统&lt;/h2>
&lt;p>由于我有本地的音乐和视频想要组合到Apple TV的系统里，因此我额外花了不少银子搭建了一套NAS系统。如果您主要使用流媒体，这个基本上不是必需品，因为价格基本上比上面的组件加起来还要高一些。&lt;/p>
&lt;p>之前我没有接触过NAS系统，并且也想降低不兼容的风险，所以我选择了群晖现成的NAS，DS220这款，外加希捷酷狼8TB的企业盘，从闲置的台式机上拆下来一个1TB的盘，七拼八凑跑起来了。目前这一套运行得不错，我经常使用自带的Download Station下载BT文件，目前有一半的节目是NAS提供的。&lt;/p>
&lt;p>谈到NAS，Apple TV上的Infuse应用程序确实很实用，但是我尝试在App Store上付费时，似乎大陆的VISA无法使用。不过，总之还是通过各种折腾成功地使用了。&lt;/p>
&lt;h2 id="总结">总结&lt;/h2>
&lt;p>总结下，除了 Apple TV 本体外，科学上网的 WIFI 路由器提供网络；NAS 提供本地的 BT 下载和视频服务；如果你要支持 DAC 那额外的 HDMI 拆光纤的转接口也是需要的。&lt;/p>
&lt;p>折腾不易，且行珍惜。&lt;/p>
&lt;p>老实说，这样一套操作下来，我觉得折腾的成本还是比较高的，从金钱到精力的投入都比较可观的，非技术宅折腾可能有点困难了。&lt;/p></description></item><item><title>Best Practices for Python Programming (Continuously Updated)</title><link>/posts/python-best-practices/</link><pubDate>Wed, 22 Feb 2023 00:00:00 +0000</pubDate><guid>/posts/python-best-practices/</guid><description>&lt;p>When delving into the codebases of some successful large Python projects such as PyTorch, I am consistently impressed by their code &amp;ndash; whether it&amp;rsquo;s clean yet precise, or leveraging lesser-known built-in or third-party packages to significantly enhance functionality.&lt;/p>
&lt;p>High-quality code snippets, handy packages, and modules have greatly facilitated my work. In this blog, I&amp;rsquo;ll be sharing noteworthy findings and insights learned from the open-source codebase.&lt;/p>
&lt;h2 id="basics">Basics&lt;/h2>
&lt;h3 id="new">&lt;code>__new__&lt;/code>&lt;/h3>
&lt;p>The &lt;code>__new__&lt;/code> method is used for creating a new instance of a class. It is a static method that gets called before the &lt;code>__init__&lt;/code> method.&lt;/p>
&lt;p>The default &lt;code>__new__&lt;/code> method could be&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">MyClass&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __new__(cls, &lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">super&lt;/span>(MyClass, cls)&lt;span style="color:#666">.&lt;/span>__new__(cls, &lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> instance
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that, different from &lt;code>__init__&lt;/code>, whose first argument is an instance &lt;code>self&lt;/code>, &lt;code>__new__&lt;/code>&amp;rsquo;s first argument is a class.&lt;/p>
&lt;p>You can override &lt;code>__new__&lt;/code> if something special need to be done with the object creation.&lt;/p>
&lt;p>There are some classical use cases for the &lt;code>__new__&lt;/code> method:&lt;/p>
&lt;h4 id="singleton-pattern">Singleton Pattern&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Singleton&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> _instance &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __new__(cls):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> cls&lt;span style="color:#666">.&lt;/span>_instance &lt;span style="color:#007020;font-weight:bold">is&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> cls&lt;span style="color:#666">.&lt;/span>_instance &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020">super&lt;/span>()&lt;span style="color:#666">.&lt;/span>__new__(cls)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> cls&lt;span style="color:#666">.&lt;/span>_instance
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Usage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>singleton1 &lt;span style="color:#666">=&lt;/span> Singleton()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>singleton2 &lt;span style="color:#666">=&lt;/span> Singleton()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(singleton1 &lt;span style="color:#007020;font-weight:bold">is&lt;/span> singleton2)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>True
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="subclassing-immutable-types">Subclassing Immutable Types&lt;/h4>
&lt;p>When subclassing immutable types like &lt;code>str&lt;/code>, &lt;code>int&lt;/code>, &lt;code>unicode&lt;/code> or &lt;code>tuple&lt;/code>, the properties of immutable cannot be changed after they are created, you can override &lt;code>__new__&lt;/code> instead:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">UpperStr&lt;/span>(&lt;span style="color:#007020">str&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __new__(cls, value):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">str&lt;/span>&lt;span style="color:#666">.&lt;/span>__new__(cls, value&lt;span style="color:#666">.&lt;/span>upper())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Usage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>upper_string &lt;span style="color:#666">=&lt;/span> UpperStr(&lt;span style="color:#4070a0">&amp;#34;hello&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(upper_string) &lt;span style="color:#60a0b0;font-style:italic"># Output: HELLO&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>HELLO
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="factory-methods">Factory Methods&lt;/h4>
&lt;p>&lt;code>__new__&lt;/code> can be used to implement factory methods that return instances of different classes based on input parameters.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Shape&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> __new__(cls, &lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> cls &lt;span style="color:#007020;font-weight:bold">is&lt;/span> Shape:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> shape_type &lt;span style="color:#666">=&lt;/span> args[&lt;span style="color:#40a070">0&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> shape_type &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;circle&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> Circle()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">elif&lt;/span> shape_type &lt;span style="color:#666">==&lt;/span> &lt;span style="color:#4070a0">&amp;#39;square&amp;#39;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> Square()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> &lt;span style="color:#007020">super&lt;/span>(Shape, cls)&lt;span style="color:#666">.&lt;/span>__new__(cls, &lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Circle&lt;/span>(Shape):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">class&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">Square&lt;/span>(Shape):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">pass&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># Usage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>shape &lt;span style="color:#666">=&lt;/span> Shape(&lt;span style="color:#4070a0">&amp;#39;circle&amp;#39;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#007020">isinstance&lt;/span>(shape, Circle)) &lt;span style="color:#60a0b0;font-style:italic"># Output: True&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>True
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="handy-modules-or-packages">Handy modules or packages&lt;/h2>
&lt;h3 id="functools">&lt;code>functools&lt;/code>&lt;/h3>
&lt;h4 id="partial-to-get-new-function-by-partially-fixing-some-arguments-of-an-existing-one">&lt;code>partial&lt;/code> to get new function by partially fixing some arguments of an existing one&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">functools&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> partial
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">func0&lt;/span>(a, b):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;a:&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>a&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">, b:&lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>b&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>func1 &lt;span style="color:#666">=&lt;/span> partial(func0, a &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(func1)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>func1(b&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">10&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># reset argument a&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>func1(a&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">1&lt;/span>, b&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">10&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>functools.partial(&amp;lt;function func0 at 0x7fa3980e31e0&amp;gt;, a=0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a:0, b:10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>a:1, b:10
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="warps-to-help-define-better-decorators">&lt;code>@warps&lt;/code> to help define better decorators&lt;/h4>
&lt;p>Below is a classical way to define an decorator&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">decorator&lt;/span>(func):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">actual_func&lt;/span>(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&amp;#39; The actual func. &amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;Before Calling &lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>func&lt;span style="color:#666">.&lt;/span>__name__&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> func(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;After Calling &lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>func&lt;span style="color:#666">.&lt;/span>__name__&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> actual_func
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@decorator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">greet&lt;/span>(name):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&amp;#39; The greet func. &amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;Hello, &lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>name&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>greet(&lt;span style="color:#4070a0">&amp;#34;Martin&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>import codecs, os;__pyfile = codecs.open(&amp;#39;&amp;#39;&amp;#39;/var/folders/41/6sd124ws3t982vl6bmw1gvjxdmh6b5/T/pyNDoRTx&amp;#39;&amp;#39;&amp;#39;, encoding=&amp;#39;&amp;#39;&amp;#39;utf-8&amp;#39;&amp;#39;&amp;#39;);__code = __pyfile.read().encode(&amp;#39;&amp;#39;&amp;#39;utf-8&amp;#39;&amp;#39;&amp;#39;);__pyfile.close();os.remove(&amp;#39;&amp;#39;&amp;#39;/var/folders/41/6sd124ws3t982vl6bmw1gvjxdmh6b5/T/pyNDoRTx&amp;#39;&amp;#39;&amp;#39;);exec(compile(__code, &amp;#39;&amp;#39;&amp;#39;/var/folders/41/6sd124ws3t982vl6bmw1gvjxdmh6b5/T/pyNDoRTx&amp;#39;&amp;#39;&amp;#39;, &amp;#39;exec&amp;#39;));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Before Calling greet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Hello, Martin!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>After Calling greet
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The name and docstring of the decorated function will be hidden in the decorator function, and this makes the usage a bit opaque when debugging.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(greet&lt;span style="color:#666">.&lt;/span>__name__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(greet&lt;span style="color:#666">.&lt;/span>__doc__)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>import codecs, os;__pyfile = codecs.open(&amp;#39;&amp;#39;&amp;#39;/var/folders/41/6sd124ws3t982vl6bmw1gvjxdmh6b5/T/py7wwbdu&amp;#39;&amp;#39;&amp;#39;, encoding=&amp;#39;&amp;#39;&amp;#39;utf-8&amp;#39;&amp;#39;&amp;#39;);__code = __pyfile.read().encode(&amp;#39;&amp;#39;&amp;#39;utf-8&amp;#39;&amp;#39;&amp;#39;);__pyfile.close();os.remove(&amp;#39;&amp;#39;&amp;#39;/var/folders/41/6sd124ws3t982vl6bmw1gvjxdmh6b5/T/py7wwbdu&amp;#39;&amp;#39;&amp;#39;);exec(compile(__code, &amp;#39;&amp;#39;&amp;#39;/var/folders/41/6sd124ws3t982vl6bmw1gvjxdmh6b5/T/py7wwbdu&amp;#39;&amp;#39;&amp;#39;, &amp;#39;exec&amp;#39;));
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>actual_func
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> The actual func.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In other words, the name and the docstring of the decorated function is overwritten by the decorator, which is not expected.&lt;/p>
&lt;p>We can fix such issue with &lt;code>@wraps&lt;/code>, for example, the original code could be replaced with&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">from&lt;/span> &lt;span style="color:#0e84b5;font-weight:bold">functools&lt;/span> &lt;span style="color:#007020;font-weight:bold">import&lt;/span> wraps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">decorator&lt;/span>(func):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#555;font-weight:bold">@wraps&lt;/span>(func)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">actual_func&lt;/span>(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;Before Calling &lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>func&lt;span style="color:#666">.&lt;/span>__name__&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> func(&lt;span style="color:#666">*&lt;/span>args, &lt;span style="color:#666">**&lt;/span>kwargs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;After Calling &lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>func&lt;span style="color:#666">.&lt;/span>__name__&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> actual_func
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@decorator&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">greet&lt;/span>(name):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4070a0">&amp;#39;&amp;#39;&amp;#39; The greet func. &amp;#39;&amp;#39;&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020">print&lt;/span>(&lt;span style="color:#4070a0">f&lt;/span>&lt;span style="color:#4070a0">&amp;#34;Hello, &lt;/span>&lt;span style="color:#70a0d0">{&lt;/span>name&lt;span style="color:#70a0d0">}&lt;/span>&lt;span style="color:#4070a0">!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(greet&lt;span style="color:#666">.&lt;/span>__name__)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020">print&lt;/span>(greet&lt;span style="color:#666">.&lt;/span>__doc__)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>greet
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> The greet func.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="lru-cache-decorator-to-wrap-a-function-with-a-lru-cache">&lt;code>@lru_cache&lt;/code> : decorator to wrap a function with a LRU cache&lt;/h4>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Accelerating DP-like recursive function call&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@functools.lru_cache&lt;/span>(maxsize&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">1000&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">factorial&lt;/span>(n):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> n &lt;span style="color:#666">*&lt;/span> factorial(n&lt;span style="color:#666">-&lt;/span>&lt;span style="color:#40a070">1&lt;/span>) &lt;span style="color:#007020;font-weight:bold">if&lt;/span> n &lt;span style="color:#007020;font-weight:bold">else&lt;/span> &lt;span style="color:#40a070">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;p>Initialization for some heavy states without introducing global variables&lt;/p>
&lt;p>Suppose we have some global states that should be initialized only once, the naive way to do it is by introducing some global variables,&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>state &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">get_state&lt;/span>(args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">if&lt;/span> state &lt;span style="color:#007020;font-weight:bold">is&lt;/span> &lt;span style="color:#007020;font-weight:bold">None&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state &lt;span style="color:#666">=&lt;/span> construct_state(args)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> state
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>We can eliminate the need for a global variable with a cache:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@lru_cache&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">get_state&lt;/span>(args):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">return&lt;/span> construct_state(args)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul></description></item><item><title>OpenAI/Triton MLIR 迁移工作简介</title><link>/posts/triton-mlir-publish/</link><pubDate>Tue, 15 Nov 2022 00:00:00 +0000</pubDate><guid>/posts/triton-mlir-publish/</guid><description>&lt;p>经过几个月的不懈努力，OpenAI Triton已经成功完成了面向MLIR Infra的迁移/重构工作，并将其最新的基于MLIR的代码合并至主分支。这个工作是由OpenAI和NVIDIA相关团队近几个月来深入合作完成的，而我也有幸参与其中。在这篇文章中，我将分享一些技术总结，记录一些收获和思考。&lt;/p>
&lt;p>尽管Triton目前的开源开发非常迅速，但本文将主要聚焦于基于MLIR Infra进行重构的第一个版本的&lt;a href="https://github.com/openai/triton/tree/ca05ef8e5b0b4d4834957bc31e7581b09d35c530">代码&lt;/a>（这应该也是两三个月前的）&lt;/p>
&lt;h2 id="triton-简介">Triton 简介&lt;/h2>
&lt;p>OpenAI Triton &lt;a href="https://www.eecs.harvard.edu/~htk/publication/2019-mapl-tillet-kung-cox.pdf">paper&lt;/a> 中的介绍是 &amp;ldquo;An Intermediate Language and Compiler for Tiled Neural Network Computations&amp;rdquo;，其中几个关键词应该能够代表其特点：&lt;/p>
&lt;ul>
&lt;li>&lt;em>Intermediate Language&lt;/em>, 目前是基于 Python 的 DSL&lt;/li>
&lt;li>&lt;em>Compiler&lt;/em> ，是一个经典的 Compiler 的架构&lt;/li>
&lt;li>&lt;em>Tiled&lt;/em> Computation，面向 GPU 体系特点，自动分析和实施 tiling&lt;/li>
&lt;/ul>
&lt;h3 id="定位">定位&lt;/h3>
&lt;p>由于 Triton 的开发非常迅速，这里只讨论当前 Triton 的功能。&lt;/p>
&lt;p>简而言之，Triton 提供了一套针对 GPU Kernel 的开发的 Language（基于 Python） 和 高性能 Compiler。&lt;/p>
&lt;figure>&lt;img src="/static/triton-publish/1.png"/>
&lt;/figure>
&lt;p>因此，就层次而言，Triton的 DNN 开发能力与 CUDA 的部分相对应，但与TVM、XLA等直接面向 DL 的 Domain compiler 无法完全对应。
后者更像是面向 DL 的武器库，拥有从构图到 auto fusion 等端到端的能力，而Triton则更像一把小巧、实用的瑞士军刀，面向偏底层的也是最通用的 Kernel 开发问题。&lt;/p>
&lt;h3 id="新代码中的架构">新代码中的架构&lt;/h3>
&lt;p>Triton 新代码中的架构总体上可以如下呈现&lt;/p>
&lt;figure>&lt;img src="/static/triton-publish/three-components.png"/>
&lt;/figure>
&lt;p>即总体上可以分为三大块&lt;/p>
&lt;ol>
&lt;li>Frontend，将用户的 Python kernel code 转换为 Triton IR，以及维护 kernel launch 的 Runtime&lt;/li>
&lt;li>Optimizer，通过各类 pass 将 Triton IR 逐步转换为优化过的 TritonGPU IR&lt;/li>
&lt;li>Backend，将 TritonGPU IR 逐步转换为 LLVM IR，并最终通过 ptxas 编译为 cubin&lt;/li>
&lt;/ol>
&lt;p>贯穿这三部分的核心表示是 Triton 的 IR，微观上，IR 也分为两个层次&lt;/p>
&lt;ol>
&lt;li>Triton Dialect，表示计算逻辑，硬件无关的表达&lt;/li>
&lt;li>TritonGPU Dialect，GPU 相关的计算表示&lt;/li>
&lt;/ol>
&lt;p>这两者都是基于 MLIR 的自定义 dialect，除此之外，Triton 也复用了很多社区的 dialect 来进行宏观的表示，包括&lt;/p>
&lt;ul>
&lt;li>&lt;code>std&lt;/code> dialect： tensor, int, float 等数据类型&lt;/li>
&lt;li>&lt;code>arith&lt;/code> dialect：各类数学操作&lt;/li>
&lt;li>&lt;code>scf&lt;/code> dialect：if, for 等控制流&lt;/li>
&lt;li>&lt;code>nvvm&lt;/code> dialect：获取 &lt;code>thread_id&lt;/code> 等少量操作&lt;/li>
&lt;li>&lt;code>gpu&lt;/code> dialect：printf 等少量操作&lt;/li>
&lt;/ul>
&lt;p>下图是 Triton 中核心表示完整的转换过程：&lt;/p>
&lt;figure>&lt;img src="/static/2023-01-29_15-59-49_screenshot.png"/>
&lt;/figure>
&lt;p>其中蓝色的两部分主要是 MLIR 体系涉及的部分，随后 MLIR 会转换为 LLVM IR，之后 Triton 会调用 NVPTX 转换为 PTX Assembly，随后由 CUDA 的 ptxas 编译器编译为 cubin。&lt;/p>
&lt;h2 id="python-界面之-frontend">Python 界面之 Frontend&lt;/h2>
&lt;p>Frontend 用于将用户用 Python 编写的 kernel 转换为对应的 Triton IR (Triton Dialect)，这里由于篇幅不便展开，细节可以阅读 &lt;a href="https://github.com/openai/triton/blob/ca05ef8e5b0b4d4834957bc31e7581b09d35c530/python/triton/compiler.py#L108">compiler.py::CodeGenerator&lt;/a> 中基于 Python ast 的规则。&lt;/p>
&lt;p>比如 vector add 的例子&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#555;font-weight:bold">@triton.jit&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">add_kernel&lt;/span>(x_ptr, y_ptr, output_ptr, N,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BLOCK_SIZE: tl&lt;span style="color:#666">.&lt;/span>constexpr):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pid &lt;span style="color:#666">=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>program_id(&lt;span style="color:#40a070">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> block_start &lt;span style="color:#666">=&lt;/span> pid &lt;span style="color:#666">*&lt;/span> BLOCK_SIZE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offsets &lt;span style="color:#666">=&lt;/span> block_start &lt;span style="color:#666">+&lt;/span> tl&lt;span style="color:#666">.&lt;/span>arange(&lt;span style="color:#40a070">0&lt;/span>, BLOCK_SIZE)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mask &lt;span style="color:#666">=&lt;/span> offsets &lt;span style="color:#666">&amp;lt;&lt;/span> N
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> x &lt;span style="color:#666">=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>load(x_ptr &lt;span style="color:#666">+&lt;/span> offsets, mask&lt;span style="color:#666">=&lt;/span>mask)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> y &lt;span style="color:#666">=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>load(y_ptr &lt;span style="color:#666">+&lt;/span> offsets, mask&lt;span style="color:#666">=&lt;/span>mask)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output &lt;span style="color:#666">=&lt;/span> x &lt;span style="color:#666">+&lt;/span> y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tl&lt;span style="color:#666">.&lt;/span>store(output_ptr&lt;span style="color:#666">+&lt;/span>offsets, output, mask&lt;span style="color:#666">=&lt;/span>mask)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># x, y are torch.Tensor&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>grid &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#007020;font-weight:bold">lambda&lt;/span> meta: (triton&lt;span style="color:#666">.&lt;/span>cdiv(n_elements, meta[&lt;span style="color:#4070a0">&amp;#39;BLOCK_SIZE&amp;#39;&lt;/span>]),)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>add_kernel[grid](x, y, output, n_elements, BLOCK_SIZE&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">1024&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>相应会得到 Triton IR&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span>&lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="">publi&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @kernel_0d1d2d3d(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c256_i32&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">256&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %0 = &lt;span style="">tt&lt;/span>.&lt;span style="">get_program_id&lt;/span> {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %1 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %0, &lt;span style="color:#bb60d5">%c256_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %2 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">256&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %3 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %1 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %4 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> %3, %2 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %5 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg0&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %6 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %5, %4 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %7 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg1&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %8 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %7, %4 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %9 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg3&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %10 = &lt;span style="">arith&lt;/span>.&lt;span style="">cmpi&lt;/span> &lt;span style="color:#007020;font-weight:bold">slt&lt;/span>, %4, %9 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %11 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> %6, %10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %12 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> %8, %10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %13 = &lt;span style="">arith&lt;/span>.&lt;span style="">addf&lt;/span> %11, %12 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %14 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg2&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %15 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %14, %4 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">store&lt;/span> %15, %13, %10 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">256&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到，Triton IR 几乎一比一地对应到原始的 Python code，将用户定义的 computation 带入 MLIR 的体系，后续会在此基础上做各类优化（by Optimizer）以及最终 translate 到更低层次的表示中（by Backend）。&lt;/p>
&lt;h2 id="性能优化之-optimizer">性能优化之 Optimizer&lt;/h2>
&lt;p>Optimizer 用于分析和优化 Frontend 传入的 IR，通过各类 Transformation 和 Conversion (Pass) 策略，最终传递给 Backend 做 translate。&lt;/p>
&lt;p>Optimizer 大致的 workflow 如下&lt;/p>
&lt;figure>&lt;img src="/static/triton-publish/optimizer.png"/>
&lt;/figure>
&lt;p>主要分为三大块优化&lt;/p>
&lt;ol>
&lt;li>TritonIR 的优化&lt;/li>
&lt;li>TritonIR to TritonGPU IR 的 Conversion&lt;/li>
&lt;li>TritonGPU IR 的优化&lt;/li>
&lt;/ol>
&lt;p>贯穿中间的数据结构是 TritonGPU IR，顾名思义是带上了 GPU 相关的信息的 IR。&lt;/p>
&lt;h3 id="tritongpu-dialect">TritonGPU Dialect&lt;/h3>
&lt;p>TritonGPU Dialect 相比 Triton Dialect，主要是增加了 GPU 硬件相关的 Op 和 Type。&lt;/p>
&lt;p>相关的主要 Op 如下&lt;/p>
&lt;ol>
&lt;li>&lt;code>async_wait(N:int) -&amp;gt; ()&lt;/code>, 直接对应到 PTX 中的 &lt;code>cp.async.wait_group N&lt;/code> 指令&lt;/li>
&lt;li>&lt;code>alloc_tensor()-&amp;gt;Tensor&lt;/code> , 表明 allocate 一个处于 shared memory 的 tensor&lt;/li>
&lt;li>&lt;code>insert_slice_async(slice:PtrTensor, dst:Tensor, index:int, mask:i1 ...) -&amp;gt; Tensor&lt;/code>, 表明往 （alloc_tensor op 产生的，shared memory中的) tensor 中 insert 一个 slice，并且这个操作是 async 的&lt;/li>
&lt;li>&lt;code>convert_layout(src:Tensor)-&amp;gt;Tensor&lt;/code> ，转换 Tensor 中的 data layout&lt;/li>
&lt;/ol>
&lt;p>前三个 Op 主要在 Pipeline 和 Prefetch 的优化（下文 Pass 中会涉及）中用到， &lt;code>convert_layout&lt;/code> Op 在 TritonGPU Dialect 中的 Type system 比较关键，以下两个小节会重点详解。&lt;/p>
&lt;h4 id="data-layout">Data layout&lt;/h4>
&lt;p>Data layout 是 TritonGPU Dialect 的 Type system 的关键，确定了 Data(各层级memory中的Tensor) 到 thread 之间的映射关系。&lt;/p>
&lt;p>目前 Triton 中有如下几种&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;ol>
&lt;li>Blocked Layout&lt;/li>
&lt;/ol>
&lt;p>Blocked Layout 表示 thread 间平均分配 workload 的情况，每个线程 own 一块 memory 上连续的 data 进行处理。&lt;/p>
&lt;p>其包含了如下三个字段用于帮助确定 thread 和数据之间的映射关系：&lt;/p>
&lt;ul>
&lt;li>sizePerThread：每个 thread 处理的 &lt;strong>连续排布&lt;/strong> 的元素数目&lt;/li>
&lt;li>threadsPerWarp：每个 Warp 在不同维度上的线程数，用向量表示&lt;/li>
&lt;li>warpsPerCTA：每个 CTA 对应的 Warp 数目，这个由用户在 Python 层制定&lt;/li>
&lt;/ul>
&lt;p>按代码中的例子&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-nil" data-lang="nil">For example, a row-major coalesced layout may partition a 16x16 tensor over 2 warps (i.e. 64 threads) as follows.
[ 0 0 1 1 2 2 3 3 ; 32 32 33 33 34 34 35 35 ]
[ 0 0 1 1 2 2 3 3 ; 32 32 33 33 34 34 35 35 ]
[ 4 4 5 5 6 6 7 7 ; 36 36 37 37 38 38 39 39 ]
[ 4 4 5 5 6 6 7 7 ; 36 36 37 37 38 38 39 39 ]
...
[ 28 28 29 29 30 30 31 31 ; 60 60 61 61 62 62 63 63 ]
[ 28 28 29 29 30 30 31 31 ; 60 60 61 61 62 62 63 63 ]
for
#triton_gpu.blocked_layout&amp;lt;{
sizePerThread = {2, 2}
threadsPerWarp = {8, 4}
warpsPerCTA = {1, 2}
}&amp;gt;
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;ol start="2">
&lt;li>Shared Layout&lt;/li>
&lt;/ol>
&lt;p>Shared Layout：表示数据在 shared memory 的一些特性，比如 swizzle 访问的一些参数。&lt;/p>
&lt;p>其包含了如下字段&lt;/p>
&lt;ul>
&lt;li>vec, 支持 vectorization 的单位&lt;/li>
&lt;li>perPhase, 每个 phase 包含多少个 vec&lt;/li>
&lt;li>maxPhase, tensor 总共包含多少个 phase&lt;/li>
&lt;li>order, axis 的次序&lt;/li>
&lt;/ul>
&lt;p>其中，vec, perPhase, maxPhase 是用于避免 bank conflict 的 swizzle 操作需要的参数。&lt;/p>
&lt;p>代码中的例子：&lt;/p>
&lt;pre tabindex="0">&lt;code class="language-nil" data-lang="nil">In order to avoid shared memory bank conflicts, elements may be swizzled
in memory. For example, a swizzled row-major layout could store its data
as follows:
A_{0, 0} A_{0, 1} A_{0, 2} A_{0, 3} ... [phase 0] \ per_phase = 2
A_{1, 0} A_{1, 1} A_{1, 2} A_{1, 3} ... [phase 0] /
groups of vec=2 elements
are stored contiguously
_ _ _ _ /\_ _ _ _
A_{2, 2} A_{2, 3} A_{2, 0} A_{2, 1} ... [phase 1] \ per phase = 2
A_{3, 2} A_{3, 3} A_{3, 0} A_{3, 1} ... [phase 1] /
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;ol start="3">
&lt;li>MMA Layout&lt;/li>
&lt;/ol>
&lt;p>顾名思义，MMA Layout 表示 Tensor Core 中 MMA 指令结果的 data layout，比如 Ampere 对应的 MMA Layout 的数据排布基本可以对应到 PTX 指令中的 &lt;a href="https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-mma-1684">mma.m16n8k16&lt;/a> 的 C,D 的排布。&lt;/p>
&lt;p>MMA Layout 主要包含两个字段：&lt;/p>
&lt;ul>
&lt;li>&lt;code>version&lt;/code> ，表示 TensorCore 的版本
&lt;ul>
&lt;li>1 为 Volta&lt;/li>
&lt;li>2 为 Ampere&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>warpsPerCTA&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>这里演示 FP16 精度下， &lt;code>version=2&lt;/code> 的数据排布（会映射到 &lt;code>mma.m16n8k16&lt;/code> 指令）的 Accumulators (C or D) 的 &lt;a href="https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-mma-16816-float">数据排布&lt;/a>。&lt;/p>
&lt;figure>&lt;img src="/static/mma.16816.png"/>
&lt;/figure>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;ol start="4">
&lt;li>DotOperand Layout&lt;/li>
&lt;/ol>
&lt;p>DotOperand Layout 用来表示 Triton 的 DotOp 的输入的 layout。&lt;/p>
&lt;p>其主要包含如下信息&lt;/p>
&lt;ol>
&lt;li>&lt;code>opIdx&lt;/code> ， Operand 的 ID
&lt;ul>
&lt;li>&lt;code>opIdx=0&lt;/code> 表示 DotOp 的 $a&lt;/li>
&lt;li>&lt;code>opIdx=1&lt;/code> 表示 DotOp 的 $b&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>parent&lt;/code> ，存储其对应的 MMA Layout，这里 DotOperand 的数据排布也可能间接的由 MMA Layout 确定（如果 DotOp lower 到 MMA 指令）或者 Blocked Layout（如果 DotOp lower 到 FMA 指令）&lt;/li>
&lt;/ol>
&lt;p>这里为了方便演示，我们采用 MMA Layout 中的 &lt;code>mma.m16n8k16.f16&lt;/code> 指令&lt;/p>
&lt;ul>
&lt;li>
&lt;p>计算精度为 FP16&lt;/p>
&lt;/li>
&lt;li>
&lt;p>MMA Layout&lt;/p>
&lt;ul>
&lt;li>&lt;code>version=2&lt;/code>&lt;/li>
&lt;li>&lt;code>warpsPerCTA=[8,4]&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>对于 $a，对应的 DotOperand 的 opIdx = 0&lt;/p>
&lt;/li>
&lt;li>
&lt;p>$b, 对应的 DotOperand 的 opIdx = 1&lt;/p>
&lt;figure>&lt;img src="/static/mma.16816.op.png"/>
&lt;/figure>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;ul>
&lt;li>
&lt;ol start="5">
&lt;li>Slice Layout&lt;/li>
&lt;/ol>
&lt;p>Slice Layout 表明单个维度上的数据反向索引&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="convertlayoutop">ConvertLayoutOp&lt;/h4>
&lt;p>顾名思义，ConvertLayoutOp 就是用来讲 Tensor 从一种 data layout 转换到另外一种 data layout。
由于 data layout 是 TensorType 的一部分，很自然会存在类型（其中layout）需要转换的情况，这就是 ConvertLayoutOp 的作用。&lt;/p>
&lt;p>有了上面的 Data Layout，接下来我们看最简单的 MatMul 中的的 IR：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#mma&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">mma&lt;/span>&amp;lt;{&lt;span style="">version&lt;/span> = &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">//&lt;/span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%37 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%38 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%39 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %37 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%40 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %38 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>%41 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> %39, %40, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">//&lt;/span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>上面是截取了一段经典 MatMul 中某个阶段的 TritonGPU IR，逻辑比较直白，定义了 &lt;code>#blocked0&lt;/code>, &lt;code>#blocked1&lt;/code> 和 &lt;code>#mma&lt;/code> 三种 layout，之后通过 &lt;code>tt.load&lt;/code> 将 DotOp 的两个 Operand 从 GEMM 加载数据到 register files，之后两个 &lt;code>triton_gpu.convert_layout&lt;/code> 转换 layout 为 DotOp 的参数需要的 &lt;code>#triton_gpu.dot_op&lt;/code> layout。&lt;/p>
&lt;p>这里列举一些典型的 data layout 的转换，以及特点：&lt;/p>
&lt;ul>
&lt;li>&lt;code>#shared -&amp;gt; #blocked&lt;/code> ，正常是代表数据从 shared memory 被 load 到 register file 中，需要考虑 swizzle&lt;/li>
&lt;li>&lt;code>#blocked -&amp;gt; #shared&lt;/code> ，代表数据从 register file 存储到 shared memory 中，需要上一步相同的 swizzle 方式&lt;/li>
&lt;li>&lt;code>#mma -&amp;gt; #blocked&lt;/code> ，正常是 DotOp 的输出转换为更简单的 layout 来进一步计算，由于涉及到跨 thread 间的数据传递，因此一般会借由 shared memory 中转一次&lt;/li>
&lt;li>&lt;code>#blocked -&amp;gt; #dot_operand&lt;/code> ，转换为 DotOp 的输入，这一步可能也需要 shared memory 中转&lt;/li>
&lt;/ul>
&lt;p>Triton 中几乎实现了任意 data layout 间的转换，当然不同的转换代价也不尽相同（考虑到是否会用到 shared memory，register 增减量等等），因此转换的代价也会在 Optimizer 里面一并考虑。&lt;/p>
&lt;h3 id="tritonir-的优化">TritonIR 的优化&lt;/h3>
&lt;p>TritonIR 上的优化主要是计算本身的，与硬件无关的优化，包含了如下 Pass&lt;/p>
&lt;ul>
&lt;li>Inliner Pass，将 Kernel Call 的子函数 Inline 展开&lt;/li>
&lt;li>Combine Pass，一些特定的 Pattern rewrite，比如
&lt;ul>
&lt;li>&lt;code>select(cond, load(ptrs, broadcast(cond), ???), other) =&amp;gt; load(ptrs, broadcast(cond), other)&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Canonicalizer Pass，一些化简的 Pattern rewrite&lt;/li>
&lt;li>CSE Pass，MLIR 的 &lt;a href="https://mlir.llvm.org/docs/Passes/#-cse-eliminate-common-sub-expressions">cse&lt;/a> Pass，用于 Eliminate common sub-expressions&lt;/li>
&lt;li>LICM Pass，MLIR 的 &lt;a href="https://mlir.llvm.org/doxygen/LoopInvariantCodeMotion_8cpp_source.html">LoopInvariantCodeMotion Pass&lt;/a> ，将循环无关的变量挪到 forloop 外面&lt;/li>
&lt;/ul>
&lt;h3 id="tritongpu-ir-的优化">TritonGPU IR 的优化&lt;/h3>
&lt;p>TritonGPU IR 上的优化在计算本身优化外，新增了 GPU 硬件相关的优化，具体的 Pass 列表如下&lt;/p>
&lt;ul>
&lt;li>ConvertTritonToTritonGPU Pass，将 Triton IR 转换为 TritonGPU IR，主要是增加 TritonGPU 特有的 layout&lt;/li>
&lt;li>Coalesce Pass，重排 order，使得最大 contiguity 的维度排在最前面&lt;/li>
&lt;li>Combine Pass，同 Triton IR&lt;/li>
&lt;li>Pipeline Pass，MMA 指令对应的 global memory 到 shared memory 的 N-Buffer 优化，下文详解&lt;/li>
&lt;li>Prefetch Pass，MMA 指令对应的 shared memory 到 register file 的 N-Buffer 优化，下文详解&lt;/li>
&lt;li>Canonicalizer，同 Triton IR&lt;/li>
&lt;li>CSE Pass，同 Triton IR&lt;/li>
&lt;li>LICM Pass，同 Triton IR&lt;/li>
&lt;/ul>
&lt;h4 id="pipeline-pass">Pipeline Pass&lt;/h4>
&lt;p>Pipeline Pass 和下一小节中的 Prefetch Pass 是配合关系，整体用来为 DotOp (mma 指令) 的 Operand 提供 IO 优化。&lt;/p>
&lt;p>Pipeline 优化主要针对 DotOp 中 GEMM 到 SMEM 之间的数据拷贝，并自动做 Double Buffer 或者 N Buffer 的优化。&lt;/p>
&lt;p>最简单的 Double buffer 的伪代码如下&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>A &lt;span style="color:#666">=&lt;/span> alloc_tensor(shape&lt;span style="color:#666">=&lt;/span>[&lt;span style="color:#40a070">2&lt;/span>&lt;span style="color:#666">*&lt;/span>&lt;span style="color:#40a070">16&lt;/span>,&lt;span style="color:#40a070">16&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic"># cp.async &amp;amp; cp.async.commit_group&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>A &lt;span style="color:#666">=&lt;/span> insert_slice_async(A, ptr0, &lt;span style="color:#40a070">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>B &lt;span style="color:#666">=&lt;/span> alloc_tensor(shape&lt;span style="color:#666">=&lt;/span>[&lt;span style="color:#40a070">2&lt;/span>&lt;span style="color:#666">*&lt;/span>&lt;span style="color:#40a070">16&lt;/span>,&lt;span style="color:#40a070">8&lt;/span>])
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>B &lt;span style="color:#666">=&lt;/span> insert_slice_async(B, ptr1, &lt;span style="color:#40a070">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>A &lt;span style="color:#666">=&lt;/span> insert_slice_async(A, ptr00, &lt;span style="color:#40a070">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>B &lt;span style="color:#666">=&lt;/span> insert_slice_async(B, ptr11, &lt;span style="color:#40a070">0&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>async_wait(num&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">2&lt;/span>) &lt;span style="color:#60a0b0;font-style:italic"># cp.async.wait_group&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>A_slice0 &lt;span style="color:#666">=&lt;/span> extract_slice(A, offset&lt;span style="color:#666">=&lt;/span>(&lt;span style="color:#40a070">0&lt;/span>,&lt;span style="color:#40a070">0&lt;/span>,&lt;span style="color:#40a070">0&lt;/span>), size&lt;span style="color:#666">=&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">16&lt;/span>,&lt;span style="color:#40a070">16&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>B_slice0 &lt;span style="color:#666">=&lt;/span> extract_slice(B, offset&lt;span style="color:#666">=&lt;/span>(&lt;span style="color:#40a070">0&lt;/span>,&lt;span style="color:#40a070">0&lt;/span>,&lt;span style="color:#40a070">0&lt;/span>), size&lt;span style="color:#666">=&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">16&lt;/span>,&lt;span style="color:#40a070">8&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> i &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#666">...&lt;/span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a &lt;span style="color:#666">=&lt;/span> ldmatrix(A_slice0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b &lt;span style="color:#666">=&lt;/span> ldmatrix(B_slice0)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c &lt;span style="color:#666">=&lt;/span> dot(a, b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offset &lt;span style="color:#666">=&lt;/span> (i&lt;span style="color:#666">+&lt;/span>&lt;span style="color:#40a070">1&lt;/span>) &lt;span style="color:#666">%&lt;/span> &lt;span style="color:#40a070">2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A &lt;span style="color:#666">=&lt;/span> insert_slice_async(A, ptr2, offset)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> B &lt;span style="color:#666">=&lt;/span> insert_slice_async(B, ptr3, offset)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> async_wait(num&lt;span style="color:#666">=&lt;/span>&lt;span style="color:#40a070">2&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A_slice0 &lt;span style="color:#666">=&lt;/span> extract_slice(A, offset&lt;span style="color:#666">=&lt;/span>(offset,&lt;span style="color:#40a070">0&lt;/span>,&lt;span style="color:#40a070">0&lt;/span>), size&lt;span style="color:#666">=&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">16&lt;/span>,&lt;span style="color:#40a070">16&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> B_slice0 &lt;span style="color:#666">=&lt;/span> extract_slice(B, offset&lt;span style="color:#666">=&lt;/span>(offset,&lt;span style="color:#40a070">0&lt;/span>,&lt;span style="color:#40a070">0&lt;/span>), size&lt;span style="color:#666">=&lt;/span>(&lt;span style="color:#40a070">1&lt;/span>,&lt;span style="color:#40a070">16&lt;/span>,&lt;span style="color:#40a070">8&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，&lt;/p>
&lt;ul>
&lt;li>&lt;code>alloc_tensor&lt;/code> 大致对应到 &lt;code>triton_gpu.alloc_tensor&lt;/code>&lt;/li>
&lt;li>&lt;code>insert_slice_async&lt;/code> 对应到 &lt;code>triton_gpu.insert_slice_async&lt;/code> ， 表示异步地向 Tensor 中插入一个 slice，这个过程是通过 &lt;code>cp.async&lt;/code> 指令实现的异步&lt;/li>
&lt;li>&lt;code>tensor.extract_slice&lt;/code> 表示从 Tensor 中读取一个 slice&lt;/li>
&lt;li>&lt;code>async_wait&lt;/code> 的语义对应到 &lt;code>cp.async.wait_group&lt;/code> 指令&lt;/li>
&lt;/ul>
&lt;h4 id="prefetch-pass">Prefetch Pass&lt;/h4>
&lt;p>Prefetch 的逻辑跟 Pipeline Pass 基本类似，也是 Double buffer 和 N Buffer 的优化，区别是其承担了 SMEM 到 register file 的数据搬运，IR 的表示方式是 &lt;code>triton_gpu.convert_layout %37 : (tensor&amp;lt;16x16xf16, #blocked0&amp;gt;) -&amp;gt; tensor&amp;lt;16x16xf16, #triton_gpu.dot_op&amp;lt;{opIdx = 0, parent = #mma}&amp;gt;&amp;gt;&lt;/code> ， 最终映射的核心指令是 &lt;code>ldmatrix&lt;/code> 。&lt;/p>
&lt;h2 id="高性能-llvm-生成之-backend">高性能 LLVM 生成之 Backend&lt;/h2>
&lt;p>Triton 的 Backend 可以有微观和宏观两个角度&lt;/p>
&lt;ul>
&lt;li>微观上主要包括 &lt;code>TritonGPU IR -&amp;gt; LLVM Dialect&lt;/code> 的过程，这里需要注意的是，&lt;a href="https://mlir.llvm.org/docs/Dialects/LLVM/">LLVM Dialect&lt;/a> 是 MLIR 体系中的一个表示，其可以进一步自动 lower 到 LLVM IR&lt;/li>
&lt;li>宏观上进一步包括了 LLVM Dialect -&amp;gt; LLVM IR -&amp;gt; PTX -&amp;gt; cubin 等过程&lt;/li>
&lt;/ul>
&lt;p>这里我们只从微观角度介绍，因为宏观角度中，大部分流程可以通过 LLVM 社区或者 CUDA 的一些设施自动完成。&lt;/p>
&lt;p>Triton 的 Backend 是比较经典的 MLIR 的 Lowering，主要内容就是将 TritonGPU IR 中包含的每种 Op 逐个的 OpConversion。 不过为了高性能，以及保证 Codegen 产物的可控，Triton 在 LLVM 中大量插入了 PTX 的内联汇编（下文会介绍）。 此外，大部分 Op 的 Lowering 都是比较规则化，下文会简要介绍 Dot 指令的 Lowering。&lt;/p>
&lt;h3 id="ptx-inline-asm">PTX inline asm&lt;/h3>
&lt;p>Triton 中使用 Inline asm 大致几个原因：&lt;/p>
&lt;ul>
&lt;li>一些指令对应的操作在现有的 &lt;code>gpu&lt;/code> 和 &lt;code>nvgpu&lt;/code> 的 dialect 还不太完善&lt;/li>
&lt;li>性能原因，比如浮点类型间的变换，一小块汇编足以；借助一个很长的 workflow 还不太可控&lt;/li>
&lt;/ul>
&lt;p>Triton 里面针对 Inline asm 的封装有个简单的 wrapper，类似最简单的 &lt;code>cp.async.wait_group&lt;/code> 的调用&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-C++" data-lang="C++">&lt;span style="display:flex;">&lt;span>PTXBuilder ptxBuilder;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">auto&lt;/span> &lt;span style="color:#666">&amp;amp;&lt;/span>asyncWaitOp &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#666">*&lt;/span>ptxBuilder.create&lt;span style="color:#666">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;cp.async.wait_group&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">auto&lt;/span> num &lt;span style="color:#666">=&lt;/span> op&lt;span style="color:#666">-&amp;gt;&lt;/span>getAttrOfType&lt;span style="color:#666">&amp;lt;&lt;/span>IntegerAttr&lt;span style="color:#666">&amp;gt;&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;num&amp;#34;&lt;/span>).getInt();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>asyncWaitOp(ptxBuilder.newConstantOperand(num));
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>到稍微复杂点的 &lt;code>ld&lt;/code> 的各种参数组合&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-C++" data-lang="C++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">auto&lt;/span> &lt;span style="color:#666">&amp;amp;&lt;/span>ld &lt;span style="color:#666">=&lt;/span> ptxBuilder.create&lt;span style="color:#666">&amp;lt;&amp;gt;&lt;/span>(&lt;span style="color:#4070a0">&amp;#34;ld&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">-&amp;gt;&lt;/span>o(&lt;span style="color:#4070a0">&amp;#34;volatile&amp;#34;&lt;/span>, op.getIsVolatile())
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .global()
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .o(&lt;span style="color:#4070a0">&amp;#34;ca&amp;#34;&lt;/span>, op.getCache() &lt;span style="color:#666">==&lt;/span> triton&lt;span style="color:#666">::&lt;/span>CacheModifier&lt;span style="color:#666">::&lt;/span>CA)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .o(&lt;span style="color:#4070a0">&amp;#34;cg&amp;#34;&lt;/span>, op.getCache() &lt;span style="color:#666">==&lt;/span> triton&lt;span style="color:#666">::&lt;/span>CacheModifier&lt;span style="color:#666">::&lt;/span>CG)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .o(&lt;span style="color:#4070a0">&amp;#34;L1::evict_first&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> op.getEvict() &lt;span style="color:#666">==&lt;/span> triton&lt;span style="color:#666">::&lt;/span>EvictionPolicy&lt;span style="color:#666">::&lt;/span>EVICT_FIRST)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .o(&lt;span style="color:#4070a0">&amp;#34;L1::evict_last&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> op.getEvict() &lt;span style="color:#666">==&lt;/span> triton&lt;span style="color:#666">::&lt;/span>EvictionPolicy&lt;span style="color:#666">::&lt;/span>EVICT_LAST)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .o(&lt;span style="color:#4070a0">&amp;#34;L1::cache_hint&amp;#34;&lt;/span>, hasL2EvictPolicy)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .v(nWords)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .b(width);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="mma-指令生成">MMA 指令生成&lt;/h3>
&lt;p>相比于 ReduceOp 等需要跟 layout 结合的 Op 的 Lowering，DotOp 的是规则非常清晰的。&lt;/p>
&lt;p>这里大致提下在 Backend，一个 Dot 的工作流涉及的阶段和 Op：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>Stage&lt;/th>
&lt;th>Op&lt;/th>
&lt;th>Layout&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>Load &lt;code>$a&lt;/code>, &lt;code>$b&lt;/code> 的 tile 到 SMEM&lt;/td>
&lt;td>&lt;code>triton_gpu.insert_slice_async&lt;/code>&lt;/td>
&lt;td>&lt;code>#shared&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>3&lt;/td>
&lt;td>从 SMEM Load 参数到 Register file&lt;/td>
&lt;td>&lt;code>tensor.extract_slice&lt;/code>&lt;/td>
&lt;td>&lt;code>#dot_op&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4&lt;/td>
&lt;td>执行 MMA，结果会在 Registter file&lt;/td>
&lt;td>&lt;code>tt.dot&lt;/code>&lt;/td>
&lt;td>&lt;code>#mma&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>所以直接跟 MMA 指令相关的其实只在第 4 步，其需要的 \(a\), \(b\) 两个参数已经通过 &lt;code>tensor.extract_slice&lt;/code> 拷贝到了 Register file，直接满足了 Ampere 上的 &lt;code>mma&lt;/code> 指令的需求。&lt;/p>
&lt;p>在 Ampere 架构上，一个 DotOp 会映射到多个 mma 指令，下面我们以 FP16 的 &lt;a href="https://docs.nvidia.com/cuda/parallel-thread-execution/index.html#warp-level-matrix-fragment-mma-16816-float">mma.m16n8k16&lt;/a> 指令为例，具体的任务设置如下&lt;/p>
&lt;ul>
&lt;li>Dot 计算的 tile 的尺寸是 M=32, N=16, K=16
&lt;ul>
&lt;li>对应着 &lt;code>mma.m16n8k16&lt;/code> 指令的尺寸是 &lt;code>M=16, N=8, K=16&lt;/code> ，因此一个 tile 需要在 m, n, k 方向展开 &lt;code>2x2x1&lt;/code> 总共 4 个 &lt;code>mma.m16n8k16&lt;/code> 指令&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>最终会有类似如下的代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-C++" data-lang="C++">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">for&lt;/span> (&lt;span style="color:#902000">unsigned&lt;/span> k &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>; k &lt;span style="color:#666">&amp;lt;&lt;/span> numK; &lt;span style="color:#666">++&lt;/span>k)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> (&lt;span style="color:#902000">unsigned&lt;/span> m &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>; m &lt;span style="color:#666">&amp;lt;&lt;/span> numM; &lt;span style="color:#666">++&lt;/span>m)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> (&lt;span style="color:#902000">unsigned&lt;/span> n &lt;span style="color:#666">=&lt;/span> &lt;span style="color:#40a070">0&lt;/span>; n &lt;span style="color:#666">&amp;lt;&lt;/span> numN; &lt;span style="color:#666">++&lt;/span>n) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> callMMA(m, n, k);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，numM, numN, numK 就对应着上面的 2, 2, 1。&lt;/p>
&lt;p>callMMA 的代码如上文时候 InlineAsm，类似如下代码&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-C++" data-lang="C++">&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">auto&lt;/span> mma &lt;span style="color:#666">=&lt;/span> builder.create(&lt;span style="color:#4070a0">&amp;#34;mma.sync.aligned.m8n8k4&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#666">-&amp;gt;&lt;/span>o(isARow &lt;span style="color:#666">?&lt;/span> &lt;span style="color:#4070a0">&amp;#34;row&amp;#34;&lt;/span> &lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">&amp;#34;col&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .o(isBRow &lt;span style="color:#666">?&lt;/span> &lt;span style="color:#4070a0">&amp;#34;row&amp;#34;&lt;/span> &lt;span style="color:#666">:&lt;/span> &lt;span style="color:#4070a0">&amp;#34;col&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .o(&lt;span style="color:#4070a0">&amp;#34;f32.f16.f16.f32&amp;#34;&lt;/span>);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mma(resOprs, AOprs, BOprs, COprs);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="fyi">FYI&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/openai/triton/tree/ca05ef8e5b0b4d4834957bc31e7581b09d35c530">Triton MLIR migration code&lt;/a>&lt;/li>
&lt;li>Triton paper: &lt;a href="https://www.eecs.harvard.edu/~htk/publication/2019-mapl-tillet-kung-cox.pdf">Triton: An Intermediate Language and Compiler forTiled Neural Network Computations&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="gemm-在-optimizer-pass-效果">GEMM 在 Optimizer Pass 效果&lt;/h3>
&lt;p>下面列举了经典的 GEMM 在 Triton 的 Compile pipeline 里面的 IR 的变换。&lt;/p>
&lt;h4 id="python-code">Python code&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">def&lt;/span> &lt;span style="color:#06287e">matmul_kernel&lt;/span>(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a_ptr, b_ptr, c_ptr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stride_am, stride_ak,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stride_bk, stride_bn,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> stride_cm, stride_cn,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> M: tl&lt;span style="color:#666">.&lt;/span>constexpr, N: tl&lt;span style="color:#666">.&lt;/span>constexpr, K: tl&lt;span style="color:#666">.&lt;/span>constexpr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BLOCK_SIZE_M: tl&lt;span style="color:#666">.&lt;/span>constexpr, BLOCK_SIZE_N: tl&lt;span style="color:#666">.&lt;/span>constexpr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> BLOCK_SIZE_K: tl&lt;span style="color:#666">.&lt;/span>constexpr,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offs_m &lt;span style="color:#666">=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>arange(&lt;span style="color:#40a070">0&lt;/span>, BLOCK_SIZE_M)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offs_n &lt;span style="color:#666">=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>arange(&lt;span style="color:#40a070">0&lt;/span>, BLOCK_SIZE_N)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> offs_k &lt;span style="color:#666">=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>arange(&lt;span style="color:#40a070">0&lt;/span>, BLOCK_SIZE_K)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a_ptrs &lt;span style="color:#666">=&lt;/span> a_ptr &lt;span style="color:#666">+&lt;/span> offs_m[:, &lt;span style="color:#007020;font-weight:bold">None&lt;/span>] &lt;span style="color:#666">*&lt;/span> stride_am &lt;span style="color:#666">+&lt;/span> offs_k[&lt;span style="color:#007020;font-weight:bold">None&lt;/span>, :] &lt;span style="color:#666">*&lt;/span> stride_ak
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b_ptrs &lt;span style="color:#666">=&lt;/span> b_ptr &lt;span style="color:#666">+&lt;/span> offs_k[:, &lt;span style="color:#007020;font-weight:bold">None&lt;/span>] &lt;span style="color:#666">*&lt;/span> stride_bk &lt;span style="color:#666">+&lt;/span> offs_n[&lt;span style="color:#007020;font-weight:bold">None&lt;/span>, :] &lt;span style="color:#666">*&lt;/span> stride_bn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accumulator &lt;span style="color:#666">=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>zeros((BLOCK_SIZE_M, BLOCK_SIZE_N), dtype&lt;span style="color:#666">=&lt;/span>tl&lt;span style="color:#666">.&lt;/span>float32)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#007020;font-weight:bold">for&lt;/span> k &lt;span style="color:#007020;font-weight:bold">in&lt;/span> &lt;span style="color:#007020">range&lt;/span>(&lt;span style="color:#40a070">0&lt;/span>, K, BLOCK_SIZE_K):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a &lt;span style="color:#666">=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>load(a_ptrs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b &lt;span style="color:#666">=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>load(b_ptrs)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accumulator &lt;span style="color:#666">+=&lt;/span> tl&lt;span style="color:#666">.&lt;/span>dot(a, b)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> a_ptrs &lt;span style="color:#666">+=&lt;/span> BLOCK_SIZE_K &lt;span style="color:#666">*&lt;/span> stride_ak
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> b_ptrs &lt;span style="color:#666">+=&lt;/span> BLOCK_SIZE_K &lt;span style="color:#666">*&lt;/span> stride_bk
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> c_ptrs &lt;span style="color:#666">=&lt;/span> c_ptr &lt;span style="color:#666">+&lt;/span> offs_m[:, &lt;span style="color:#007020;font-weight:bold">None&lt;/span>] &lt;span style="color:#666">*&lt;/span> stride_cm &lt;span style="color:#666">+&lt;/span> offs_n[&lt;span style="color:#007020;font-weight:bold">None&lt;/span>, :] &lt;span style="color:#666">*&lt;/span> stride_cn
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> tl&lt;span style="color:#666">.&lt;/span>store(c_ptrs, accumulator)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="triton-ir-translated-from-python-ast--and-after-inliner-ces-dot-dot-dot-passes">Triton IR translated from Python AST(and after Inliner, CES &amp;hellip; passes)&lt;/h4>
&lt;p>这一步算是 Python code 直接翻译到了 Triton IR.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span> &lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="">publi&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @matmul_kernel_0d1d2d3d4c56c78c(&lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg4&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg5&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">0.000000e+00&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c64&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst_0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16_i32&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %0 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %1 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">8&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %2 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %0 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %3 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg3&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %4 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %2, %3 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %5 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg0&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %6 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %5, %4 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %7 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %0 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %8 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %6 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %9 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %7 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %10 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %8, %9 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %11 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %12 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %2, %11 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %13 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg1&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %14 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %13, %12 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %15 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %1 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %16 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %14 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %17 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %15 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %18 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %16, %17 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %19&lt;span style="">:&lt;/span>&lt;span style="color:#40a070">3&lt;/span> = &lt;span style="">scf&lt;/span>.&lt;span style="">f&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#bb60d5">%arg6&lt;/span> = &lt;span style="color:#bb60d5">%c0&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">step&lt;/span> &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">iter_args&lt;/span>(&lt;span style="color:#bb60d5">%arg7&lt;/span> = &lt;span style="color:#bb60d5">%cst&lt;/span>, &lt;span style="color:#bb60d5">%arg8&lt;/span> = %10, &lt;span style="color:#bb60d5">%arg9&lt;/span> = %18) &lt;span style="">-&lt;/span>&amp;gt; (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %26 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %27 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %28 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> %26, %27, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %29 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %30 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span>, &lt;span style="color:#bb60d5">%c16_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %31 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %30 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %32 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span>, %31 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">scf&lt;/span>.&lt;span style="">yield&lt;/span> %28, %29, %32 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %20 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg5&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %21 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %2, %20 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %22 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg2&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %23 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %22, %21 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %24 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %23 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %25 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %24, %17 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">store&lt;/span> %25, %19#0 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ir-before-loopinvariantcodemotion">IR Before LoopInvariantCodeMotion&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span> &lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="">publi&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @matmul_kernel_0d1d2d3d4c56c78c(&lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg4&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg5&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">0.000000e+00&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c64&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst_0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16_i32&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %0 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %1 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">8&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %2 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %0 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %3 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg3&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %4 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %2, %3 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %5 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg0&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %6 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %5, %4 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %7 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %0 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %8 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %6 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %9 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %7 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %10 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %8, %9 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %11 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %12 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %2, %11 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %13 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg1&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %14 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %13, %12 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %15 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %1 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %16 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %14 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %17 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %15 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %18 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %16, %17 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %19&lt;span style="">:&lt;/span>&lt;span style="color:#40a070">3&lt;/span> = &lt;span style="">scf&lt;/span>.&lt;span style="">f&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#bb60d5">%arg6&lt;/span> = &lt;span style="color:#bb60d5">%c0&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">step&lt;/span> &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">iter_args&lt;/span>(&lt;span style="color:#bb60d5">%arg7&lt;/span> = &lt;span style="color:#bb60d5">%cst&lt;/span>, &lt;span style="color:#bb60d5">%arg8&lt;/span> = %10, &lt;span style="color:#bb60d5">%arg9&lt;/span> = %18) &lt;span style="">-&lt;/span>&amp;gt; (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %26 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %27 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %28 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> %26, %27, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %29 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %30 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span>, &lt;span style="color:#bb60d5">%c16_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %31 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %30 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %32 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span>, %31 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">scf&lt;/span>.&lt;span style="">yield&lt;/span> %28, %29, %32 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %20 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg5&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %21 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %2, %20 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %22 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg2&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %23 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %22, %21 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %24 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %23 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %25 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %24, %17 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">store&lt;/span> %25, %19#0 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>可以看到&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span> %30 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span>, &lt;span style="color:#bb60d5">%c16_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %31 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %30 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这段计算的输入分别是 function argument 和 constant，不依赖 forloop 内的变量，理论上可以挪出去。&lt;/p>
&lt;h4 id="ir-after-loopinvariantcodemotion">IR After LoopInvariantCodeMotion&lt;/h4>
&lt;p>LoopInvariantCodeMotion 是 MLIR 社区的一个 Pass，用于将无关 variable 计算挪到 forloop 外面，可以看到上小节里面的计算已经挪出去了。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span> &lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="">publi&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @matmul_kernel_0d1d2d3d4c56c78c(&lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg4&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg5&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">0.000000e+00&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c64&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst_0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16_i32&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %0 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %1 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">8&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %2 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %0 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %3 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg3&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %4 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %2, %3 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %5 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg0&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %6 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %5, %4 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %7 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %0 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %8 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %6 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %9 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %7 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %10 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %8, %9 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %11 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %12 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %2, %11 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %13 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg1&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %14 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %13, %12 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %15 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %1 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %16 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %14 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %17 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %15 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %18 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %16, %17 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %19 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span>, &lt;span style="color:#bb60d5">%c16_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %20 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %19 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %21&lt;span style="">:&lt;/span>&lt;span style="color:#40a070">3&lt;/span> = &lt;span style="">scf&lt;/span>.&lt;span style="">f&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#bb60d5">%arg6&lt;/span> = &lt;span style="color:#bb60d5">%c0&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">step&lt;/span> &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">iter_args&lt;/span>(&lt;span style="color:#bb60d5">%arg7&lt;/span> = &lt;span style="color:#bb60d5">%cst&lt;/span>, &lt;span style="color:#bb60d5">%arg8&lt;/span> = %10, &lt;span style="color:#bb60d5">%arg9&lt;/span> = %18) &lt;span style="">-&lt;/span>&amp;gt; (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %28 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %29 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %30 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> %28, %29, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %31 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %32 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span>, %20 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">scf&lt;/span>.&lt;span style="">yield&lt;/span> %30, %31, %32 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %22 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg5&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %23 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %2, %22 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %24 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg2&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %25 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %24, %23 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %26 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %25 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %27 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %26, %17 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">store&lt;/span> %27, %21#0 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ir-after-converttritontotritongpu">IR After ConvertTritonToTritonGPU&lt;/h4>
&lt;p>这一步是在原有的硬件无关的 Triton IR 基础上加入了 GPU 相关的 data layout 和 operation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex; background-color:#d8d8d8">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">16&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">3&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">5&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">module&lt;/span> &lt;span style="color:#007020;font-weight:bold">attributes&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;triton_gpu.num-warps&amp;#34;&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="">publi&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @matmul_kernel_0d1d2d3d4c56c78c(&lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg4&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg5&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">0.000000e+00&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">|\colorbo&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>{&lt;span style="">yellow&lt;/span>}{&lt;span style="">\strut&lt;/span> &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>}&lt;span style="">|&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c64&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst_0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16_i32&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %0 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %1 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">8&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %2 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %0 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %3 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %2 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>}&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %4 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg3&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %5 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %3, %4 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %6 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg0&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %7 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %6, %5 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %8 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %0 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">3&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %9 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %8 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">3&lt;/span>}&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">3&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %10 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %7 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %11 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %10 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %12 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %9 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">3&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">3&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %13 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %12 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">3&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %14 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %11, %13 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %15 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %16 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %3, %15 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %17 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg1&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %18 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %17, %16 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %19 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %1 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">5&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %20 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %19 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">5&lt;/span>}&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">5&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %21 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %18 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %22 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %21 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %23 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %20 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">5&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">5&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %24 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %23 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">5&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %25 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %22, %24 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %26 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span>, &lt;span style="color:#bb60d5">%c16_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %27 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %26 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %28&lt;span style="">:&lt;/span>&lt;span style="color:#40a070">3&lt;/span> = &lt;span style="">scf&lt;/span>.&lt;span style="">f&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#bb60d5">%arg6&lt;/span> = &lt;span style="color:#bb60d5">%c0&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">step&lt;/span> &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">iter_args&lt;/span>(&lt;span style="color:#bb60d5">%arg7&lt;/span> = &lt;span style="color:#bb60d5">%cst&lt;/span>, &lt;span style="color:#bb60d5">%arg8&lt;/span> = %14, &lt;span style="color:#bb60d5">%arg9&lt;/span> = %25) &lt;span style="">-&lt;/span>&amp;gt; (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %36 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %37 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %38 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %36 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %39 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %37 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %40 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> %38, %39, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>}&amp;gt;&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>}&amp;gt;&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %41 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %42 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span>, %27 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">scf&lt;/span>.&lt;span style="">yield&lt;/span> %40, %41, %42 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %29 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg5&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %30 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %3, %29 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %31 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg2&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %32 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %31, %30 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %33 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %32 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %34 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %33 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">2&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %35 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %34, %24 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">store&lt;/span> %35, %28#0 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">4&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>这里比较明显的是&lt;/p>
&lt;ol>
&lt;li>作为 dotOp 的输出， &lt;code>%40&lt;/code> 应该是 mma layout，但这一步还是 blocked layout，这个会在下一节里面改写&lt;/li>
&lt;li>&lt;code>%38&lt;/code>, &lt;code>%39&lt;/code> 这些的 layout 应该是 &lt;code>dot_op&amp;lt;mma&amp;gt;&lt;/code> 但由于 mma layout 还没有给定，所以还是 &lt;code>dot_op&amp;lt;blocked&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;h4 id="ir-after-tritongpucombineops">IR After TritonGPUCombineOps&lt;/h4>
&lt;p>这一步会包含很多 Op pattern 的改写，直接的变化是&lt;/p>
&lt;ul>
&lt;li>给 dot 相关的增加了 mma 的 data layout&lt;/li>
&lt;li>插入了 mma layout 相关的 &lt;code>convert_layout&lt;/code>&lt;/li>
&lt;/ul>
&lt;!-- raw HTML omitted -->
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span>&lt;span style="">#mma&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">mma&lt;/span>&amp;lt;{&lt;span style="">version&lt;/span> = &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">module&lt;/span> &lt;span style="color:#007020;font-weight:bold">attributes&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;triton_gpu.num-warps&amp;#34;&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="">publi&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @matmul_kernel_0d1d2d3d4c56c78c(&lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg4&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg5&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c64&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c16_i32&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">0.000000e+00&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%cst_0&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="">dense&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&amp;gt; &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %0 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %1 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %2 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %3 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg3&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %4 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg0&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %5 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %6 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %0 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>}&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %7 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %6, %3 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %8 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %4, %7 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %9 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %8 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %10 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %5 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>}&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %11 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %10 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %12 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %13 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg1&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %14 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">8&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %15 = &lt;span style="">tt&lt;/span>.&lt;span style="">make_range&lt;/span> {&lt;span style="color:#007020;font-weight:bold">end&lt;/span> = &lt;span style="color:#40a070">8&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">start&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %16 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %1 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>}&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %17 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %16, %12 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %18 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %13, %17 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %19 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %18 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %20 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %14 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>}&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %21 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %20 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %22 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %15 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>}&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %23 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %22 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %24 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> &lt;span style="color:#bb60d5">%arg4&lt;/span>, &lt;span style="color:#bb60d5">%c16_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %25 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %24 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %26 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %9, %11 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %27 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %19, %21 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %28&lt;span style="">:&lt;/span>&lt;span style="color:#40a070">3&lt;/span> = &lt;span style="">scf&lt;/span>.&lt;span style="">f&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#bb60d5">%arg6&lt;/span> = &lt;span style="color:#bb60d5">%c0&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">step&lt;/span> &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">iter_args&lt;/span>(&lt;span style="color:#bb60d5">%arg7&lt;/span> = &lt;span style="color:#bb60d5">%cst&lt;/span>, &lt;span style="color:#bb60d5">%arg8&lt;/span> = %26, &lt;span style="color:#bb60d5">%arg9&lt;/span> = %27) &lt;span style="">-&lt;/span>&amp;gt; (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %37 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %38 = &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">load&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span> {&lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %39 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %37 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %40 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %38 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %41 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> %39, %40, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %42 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %43 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span>, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">scf&lt;/span>.&lt;span style="">yield&lt;/span> %41, %42, %43 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %29 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg5&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %30 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> &lt;span style="color:#bb60d5">%arg2&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %31 = &lt;span style="">tt&lt;/span>.&lt;span style="">expand_dims&lt;/span> %2 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">slice&lt;/span>&amp;lt;{&lt;span style="">dim&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>}&amp;gt;&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %32 = &lt;span style="">arith&lt;/span>.&lt;span style="">muli&lt;/span> %31, %29 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %33 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %30, %32 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %34 = &lt;span style="">tt&lt;/span>.&lt;span style="">broadcast&lt;/span> %33 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %35 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %34, %23 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %36 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %28#0 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">tt&lt;/span>.&lt;span style="color:#007020;font-weight:bold">store&lt;/span> %35, %36 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ir-after-tritongpupipeline">IR After TritonGPUPipeline&lt;/h4>
&lt;p>这一步可以认为是在 global memory -&amp;gt; shared memory 的数据搬运做 Pipeline 优化。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#mma&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">mma&lt;/span>&amp;lt;{&lt;span style="">version&lt;/span> = &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">shared&lt;/span>&amp;lt;{&lt;span style="">ve&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> = &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="">perPhase&lt;/span> = &lt;span style="color:#40a070">4&lt;/span>, &lt;span style="">maxPhase&lt;/span> = &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">shared&lt;/span>&amp;lt;{&lt;span style="">ve&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> = &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="">perPhase&lt;/span> = &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="">maxPhase&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">module&lt;/span> &lt;span style="color:#007020;font-weight:bold">attributes&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;triton_gpu.num-warps&amp;#34;&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="">publi&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @matmul_kernel_0d1d2d3d4c56c78c(&lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg4&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg5&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %28 = &lt;span style="">arith&lt;/span>.&lt;span style="">cmpi&lt;/span> &lt;span style="color:#007020;font-weight:bold">slt&lt;/span>, &lt;span style="color:#bb60d5">%c0&lt;/span>, &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %29 = &lt;span style="color:#002070;font-weight:bold">triton_gpu.alloc_tensor :&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %30 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %28 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %31 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> %26, %29, &lt;span style="color:#bb60d5">%c0_i32&lt;/span>, %30 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %32 = &lt;span style="color:#002070;font-weight:bold">triton_gpu.alloc_tensor :&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %33 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %28 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %34 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> %27, %32, &lt;span style="color:#bb60d5">%c0_i32&lt;/span>, %33 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %35 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %26, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %36 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %27, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %40 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %39 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %41 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> %35, %31, %37, %40 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %42 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %39 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %43 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> %36, %34, %37, %42 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %44 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %35, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %45 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %36, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_1&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %46 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> %37, &lt;span style="color:#bb60d5">%c1_i32_1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">async_wait&lt;/span> {&lt;span style="">num&lt;/span> = &lt;span style="color:#40a070">2&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c0_i32_2&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %47 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %41[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %48 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %43[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_3&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %49 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%c0_i32_2&lt;/span>, &lt;span style="color:#bb60d5">%c1_i32_3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %50&lt;span style="">:&lt;/span>&lt;span style="color:#40a070">12&lt;/span> = &lt;span style="">scf&lt;/span>.&lt;span style="">f&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#bb60d5">%arg6&lt;/span> = &lt;span style="color:#bb60d5">%c0&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">step&lt;/span> &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">iter_args&lt;/span>(&lt;span style="color:#bb60d5">%arg7&lt;/span> = &lt;span style="color:#bb60d5">%cst&lt;/span>, &lt;span style="color:#bb60d5">%arg8&lt;/span> = %26, &lt;span style="color:#bb60d5">%arg9&lt;/span> = %27, &lt;span style="color:#bb60d5">%arg10&lt;/span> = %41, &lt;span style="color:#bb60d5">%arg11&lt;/span> = %43, &lt;span style="color:#bb60d5">%arg12&lt;/span> = %47, &lt;span style="color:#bb60d5">%arg13&lt;/span> = %48, &lt;span style="color:#bb60d5">%arg14&lt;/span> = %45, &lt;span style="color:#bb60d5">%arg15&lt;/span> = %44, &lt;span style="color:#bb60d5">%arg16&lt;/span> = %38, &lt;span style="color:#bb60d5">%arg17&lt;/span> = %46, &lt;span style="color:#bb60d5">%arg18&lt;/span> = %49) &lt;span style="">-&lt;/span>&amp;gt; (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %59 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> &lt;span style="color:#bb60d5">%arg12&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %60 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> &lt;span style="color:#bb60d5">%arg13&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %61 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> %59, %60, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %62 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %63 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span>, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %64 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%arg16&lt;/span>, &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %65 = &lt;span style="">arith&lt;/span>.&lt;span style="">cmpi&lt;/span> &lt;span style="color:#007020;font-weight:bold">slt&lt;/span>, %64, &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c3_i32&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %66 = &lt;span style="">arith&lt;/span>.&lt;span style="">remsi&lt;/span> &lt;span style="color:#bb60d5">%arg17&lt;/span>, &lt;span style="color:#bb60d5">%c3_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c3_i32_4&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %67 = &lt;span style="">arith&lt;/span>.&lt;span style="">remsi&lt;/span> &lt;span style="color:#bb60d5">%arg18&lt;/span>, &lt;span style="color:#bb60d5">%c3_i32_4&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %68 = &lt;span style="">arith&lt;/span>.&lt;span style="">index_cast&lt;/span> %67 &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %69 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %65 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %70 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="color:#bb60d5">%arg15&lt;/span>, &lt;span style="color:#bb60d5">%arg10&lt;/span>, %66, %69 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %71 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %65 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %72 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="color:#bb60d5">%arg14&lt;/span>, &lt;span style="color:#bb60d5">%arg11&lt;/span>, %66, %71 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %73 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg15&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %74 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg14&lt;/span>, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">async_wait&lt;/span> {&lt;span style="">num&lt;/span> = &lt;span style="color:#40a070">2&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %75 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %70[%68, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %76 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %72[%68, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_5&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %77 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%arg17&lt;/span>, &lt;span style="color:#bb60d5">%c1_i32_5&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_6&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %78 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%arg18&lt;/span>, &lt;span style="color:#bb60d5">%c1_i32_6&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">scf&lt;/span>.&lt;span style="">yield&lt;/span> %61, %62, %63, %70, %72, %75, %76, %74, %73, %64, %77, %78 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ir-before-tritongpuprefetch">IR Before TritonGPUPrefetch&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#mma&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">mma&lt;/span>&amp;lt;{&lt;span style="">version&lt;/span> = &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">shared&lt;/span>&amp;lt;{&lt;span style="">ve&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> = &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="">perPhase&lt;/span> = &lt;span style="color:#40a070">4&lt;/span>, &lt;span style="">maxPhase&lt;/span> = &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">shared&lt;/span>&amp;lt;{&lt;span style="">ve&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> = &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="">perPhase&lt;/span> = &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="">maxPhase&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">module&lt;/span> &lt;span style="color:#007020;font-weight:bold">attributes&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;triton_gpu.num-warps&amp;#34;&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="">publi&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @matmul_kernel_0d1d2d3d4c56c78c(&lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt;, &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg4&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg5&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %28 = &lt;span style="">arith&lt;/span>.&lt;span style="">cmpi&lt;/span> &lt;span style="color:#007020;font-weight:bold">slt&lt;/span>, &lt;span style="color:#bb60d5">%c0&lt;/span>, &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %29 = &lt;span style="color:#002070;font-weight:bold">triton_gpu.alloc_tensor :&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %30 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %28 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %31 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> %26, %29, &lt;span style="color:#bb60d5">%c0_i32&lt;/span>, %30 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %32 = &lt;span style="color:#002070;font-weight:bold">triton_gpu.alloc_tensor :&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %33 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %28 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %34 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> %27, %32, &lt;span style="color:#bb60d5">%c0_i32&lt;/span>, %33 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %35 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %26, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %36 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %27, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %40 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %39 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %41 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> %35, %31, %37, %40 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %42 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %39 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %43 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> %36, %34, %37, %42 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %44 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %35, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %45 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> %36, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_1&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %46 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> %37, &lt;span style="color:#bb60d5">%c1_i32_1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">async_wait&lt;/span> {&lt;span style="">num&lt;/span> = &lt;span style="color:#40a070">2&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c0_i32_2&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %47 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %41[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %48 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %43[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_3&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %49 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%c0_i32_2&lt;/span>, &lt;span style="color:#bb60d5">%c1_i32_3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %50&lt;span style="">:&lt;/span>&lt;span style="color:#40a070">12&lt;/span> = &lt;span style="">scf&lt;/span>.&lt;span style="">f&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#bb60d5">%arg6&lt;/span> = &lt;span style="color:#bb60d5">%c0&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">step&lt;/span> &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">iter_args&lt;/span>(&lt;span style="color:#bb60d5">%arg7&lt;/span> = &lt;span style="color:#bb60d5">%cst&lt;/span>, &lt;span style="color:#bb60d5">%arg8&lt;/span> = %26, &lt;span style="color:#bb60d5">%arg9&lt;/span> = %27, &lt;span style="color:#bb60d5">%arg10&lt;/span> = %41, &lt;span style="color:#bb60d5">%arg11&lt;/span> = %43, &lt;span style="color:#bb60d5">%arg12&lt;/span> = %47, &lt;span style="color:#bb60d5">%arg13&lt;/span> = %48, &lt;span style="color:#bb60d5">%arg14&lt;/span> = %45, &lt;span style="color:#bb60d5">%arg15&lt;/span> = %44, &lt;span style="color:#bb60d5">%arg16&lt;/span> = %38, &lt;span style="color:#bb60d5">%arg17&lt;/span> = %46, &lt;span style="color:#bb60d5">%arg18&lt;/span> = %49) &lt;span style="">-&lt;/span>&amp;gt; (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %59 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> &lt;span style="color:#bb60d5">%arg12&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %60 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> &lt;span style="color:#bb60d5">%arg13&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %61 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> %59, %60, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %62 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %63 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span>, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %64 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%arg16&lt;/span>, &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %65 = &lt;span style="">arith&lt;/span>.&lt;span style="">cmpi&lt;/span> &lt;span style="color:#007020;font-weight:bold">slt&lt;/span>, %64, &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c3_i32&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %66 = &lt;span style="">arith&lt;/span>.&lt;span style="">remsi&lt;/span> &lt;span style="color:#bb60d5">%arg17&lt;/span>, &lt;span style="color:#bb60d5">%c3_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c3_i32_4&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %67 = &lt;span style="">arith&lt;/span>.&lt;span style="">remsi&lt;/span> &lt;span style="color:#bb60d5">%arg18&lt;/span>, &lt;span style="color:#bb60d5">%c3_i32_4&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %68 = &lt;span style="">arith&lt;/span>.&lt;span style="">index_cast&lt;/span> %67 &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %69 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %65 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %70 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="color:#bb60d5">%arg15&lt;/span>, &lt;span style="color:#bb60d5">%arg10&lt;/span>, %66, %69 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %71 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %65 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %72 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="color:#bb60d5">%arg14&lt;/span>, &lt;span style="color:#bb60d5">%arg11&lt;/span>, %66, %71 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %73 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg15&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %74 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg14&lt;/span>, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">async_wait&lt;/span> {&lt;span style="">num&lt;/span> = &lt;span style="color:#40a070">2&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %75 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %70[%68, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %76 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %72[%68, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_5&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %77 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%arg17&lt;/span>, &lt;span style="color:#bb60d5">%c1_i32_5&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_6&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %78 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%arg18&lt;/span>, &lt;span style="color:#bb60d5">%c1_i32_6&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">scf&lt;/span>.&lt;span style="">yield&lt;/span> %61, %62, %63, %70, %72, %75, %76, %74, %73, %64, %77, %78 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ir-after-tritongpuprefetch">IR After TritonGPUPrefetch&lt;/h4>
&lt;p>这一步可以认为是在 Dot 相关的 shared memory -&amp;gt; registers 的数据搬运阶段做 Pipepline 优化。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">2&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">blocked&lt;/span>&amp;lt;{&lt;span style="">sizePerThread&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">threadsPerWarp&lt;/span> = [&lt;span style="color:#40a070">4&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>], &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>], &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#mma&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">mma&lt;/span>&amp;lt;{&lt;span style="">version&lt;/span> = &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="">warpsPerCTA&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">shared&lt;/span>&amp;lt;{&lt;span style="">ve&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> = &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="">perPhase&lt;/span> = &lt;span style="color:#40a070">4&lt;/span>, &lt;span style="">maxPhase&lt;/span> = &lt;span style="color:#40a070">2&lt;/span>, &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span> = &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">shared&lt;/span>&amp;lt;{&lt;span style="">ve&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> = &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="">perPhase&lt;/span> = &lt;span style="color:#40a070">8&lt;/span>, &lt;span style="">maxPhase&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">order&lt;/span> = [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>]}&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">module&lt;/span> &lt;span style="color:#007020;font-weight:bold">attributes&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;triton_gpu.num-warps&amp;#34;&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="">publi&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @matmul_kernel_0d1d2d3d4c56c78c(&lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg4&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">%arg5&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">async_wait&lt;/span> {&lt;span style="">num&lt;/span> = &lt;span style="color:#40a070">2&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c0_i32_2&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %47 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %41[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %48 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %43[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_3&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %49 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%c0_i32_2&lt;/span>, &lt;span style="color:#bb60d5">%c1_i32_3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %50 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %47[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %51 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %50 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %52 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %48[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %53 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %52 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %54&lt;span style="">:&lt;/span>&lt;span style="color:#40a070">14&lt;/span> = &lt;span style="">scf&lt;/span>.&lt;span style="">f&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span> &lt;span style="color:#bb60d5">%arg6&lt;/span> = &lt;span style="color:#bb60d5">%c0&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">step&lt;/span> &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">iter_args&lt;/span>(&lt;span style="color:#bb60d5">%arg7&lt;/span> = &lt;span style="color:#bb60d5">%cst&lt;/span>, &lt;span style="color:#bb60d5">%arg8&lt;/span> = %26, &lt;span style="color:#bb60d5">%arg9&lt;/span> = %27, &lt;span style="color:#bb60d5">%arg10&lt;/span> = %41, &lt;span style="color:#bb60d5">%arg11&lt;/span> = %43, &lt;span style="color:#bb60d5">%arg12&lt;/span> = %47, &lt;span style="color:#bb60d5">%arg13&lt;/span> = %48, &lt;span style="color:#bb60d5">%arg14&lt;/span> = %45, &lt;span style="color:#bb60d5">%arg15&lt;/span> = %44, &lt;span style="color:#bb60d5">%arg16&lt;/span> = %38, &lt;span style="color:#bb60d5">%arg17&lt;/span> = %46, &lt;span style="color:#bb60d5">%arg18&lt;/span> = %49, &lt;span style="color:#bb60d5">%arg19&lt;/span> = %51, &lt;span style="color:#bb60d5">%arg20&lt;/span> = %53) &lt;span style="">-&lt;/span>&amp;gt; (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;) {
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %63 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> &lt;span style="color:#bb60d5">%arg12&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %64 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> &lt;span style="color:#bb60d5">%arg13&lt;/span> &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %65 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> %63, %64, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %66 = &lt;span style="">tt&lt;/span>.&lt;span style="">dot&lt;/span> &lt;span style="color:#bb60d5">%arg19&lt;/span>, &lt;span style="color:#bb60d5">%arg20&lt;/span>, &lt;span style="color:#bb60d5">%arg7&lt;/span> {&lt;span style="">allowTF&lt;/span>&lt;span style="color:#40a070">32&lt;/span> = &lt;span style="color:#007020;font-weight:bold">true&lt;/span>, &lt;span style="">transA&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>, &lt;span style="">transB&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; * &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %67 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg8&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %68 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg9&lt;/span>, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %69 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%arg16&lt;/span>, &lt;span style="color:#bb60d5">%c16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %70 = &lt;span style="">arith&lt;/span>.&lt;span style="">cmpi&lt;/span> &lt;span style="color:#007020;font-weight:bold">slt&lt;/span>, %69, &lt;span style="color:#bb60d5">%c64&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c3_i32&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %71 = &lt;span style="">arith&lt;/span>.&lt;span style="">remsi&lt;/span> &lt;span style="color:#bb60d5">%arg17&lt;/span>, &lt;span style="color:#bb60d5">%c3_i32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c3_i32_4&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %72 = &lt;span style="">arith&lt;/span>.&lt;span style="">remsi&lt;/span> &lt;span style="color:#bb60d5">%arg18&lt;/span>, &lt;span style="color:#bb60d5">%c3_i32_4&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %73 = &lt;span style="">arith&lt;/span>.&lt;span style="">index_cast&lt;/span> %72 &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %74 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %70 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %75 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="color:#bb60d5">%arg15&lt;/span>, &lt;span style="color:#bb60d5">%arg10&lt;/span>, %71, %74 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %76 = &lt;span style="">tt&lt;/span>.&lt;span style="">splat&lt;/span> %70 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %77 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">insert_slice_asyn&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> &lt;span style="color:#bb60d5">%arg14&lt;/span>, &lt;span style="color:#bb60d5">%arg11&lt;/span>, %71, %76 {&lt;span style="">axis&lt;/span> = &lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">cache&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">evict&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">isVolatile&lt;/span> = &lt;span style="color:#007020;font-weight:bold">false&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %78 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg15&lt;/span>, &lt;span style="color:#bb60d5">%cst_0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %79 = &lt;span style="">tt&lt;/span>.&lt;span style="">addptr&lt;/span> &lt;span style="color:#bb60d5">%arg14&lt;/span>, %25 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">async_wait&lt;/span> {&lt;span style="">num&lt;/span> = &lt;span style="color:#40a070">2&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %80 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %75[%73, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %81 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %77[%73, &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_5&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %82 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%arg17&lt;/span>, &lt;span style="color:#bb60d5">%c1_i32_5&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">%c1_i32_6&lt;/span> = &lt;span style="">arith&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span> &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %83 = &lt;span style="">arith&lt;/span>.&lt;span style="">addi&lt;/span> &lt;span style="color:#bb60d5">%arg18&lt;/span>, &lt;span style="color:#bb60d5">%c1_i32_6&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %84 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %80[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">16&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %85 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %84 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %86 = &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>.&lt;span style="">extract_slice&lt;/span> %81[&lt;span style="color:#40a070">0&lt;/span>, &lt;span style="color:#40a070">0&lt;/span>] [&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">8&lt;/span>] [&lt;span style="color:#40a070">1&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>] &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %87 = &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">convert_layout&lt;/span> %86 &lt;span style="">:&lt;/span> (&lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">scf&lt;/span>.&lt;span style="">yield&lt;/span> %65, %67, %68, %75, %77, %80, %81, %79, %78, %69, %82, %83, %85, %87 &lt;span style="">:&lt;/span> &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">#mma&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">3&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#shared&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>&lt;span style="color:#bb60d5">!tt.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">#blocked&lt;/span>&lt;span style="color:#40a070">0&lt;/span>&amp;gt;, &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">0&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;, &lt;span style="">tens&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">16&lt;/span>&lt;span style="">x&lt;/span>&lt;span style="color:#40a070">8&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="">#triton_gpu&lt;/span>.&lt;span style="">dot_op&lt;/span>&amp;lt;{&lt;span style="">opId&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span> = &lt;span style="color:#40a070">1&lt;/span>, &lt;span style="">parent&lt;/span> = &lt;span style="">#mma&lt;/span>}&amp;gt;&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">return&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="ir-after-tritongputollvm">IR After TritonGPUToLLVM&lt;/h4>
&lt;p>MLIR 阶段的最后一步就是 translate 到 LLVM dialect，可以看到其中 Triton backend 插入的 Inline Asm。&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-llvm" data-lang="llvm">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#007020;font-weight:bold">module&lt;/span> &lt;span style="color:#007020;font-weight:bold">attributes&lt;/span> {&lt;span style="color:#4070a0">&amp;#34;triton_gpu.num-warps&amp;#34;&lt;/span> = &lt;span style="color:#40a070">4&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">triton_gpu&lt;/span>.&lt;span style="">shared&lt;/span> = &lt;span style="color:#40a070">36864&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="color:#007020;font-weight:bold">global&lt;/span> &lt;span style="color:#007020;font-weight:bold">external&lt;/span> @global_smem() {&lt;span style="">addr_space&lt;/span> = &lt;span style="color:#40a070">3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>} &lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!llvm.array&lt;/span>&amp;lt;&lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">x&lt;/span> &lt;span style="color:#007020;font-weight:bold">i8&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="">llvm&lt;/span>.&lt;span style="">fun&lt;/span>&lt;span style="color:#007020;font-weight:bold">c&lt;/span> @matmul_kernel_0d1d2d3d4c5d6c7d8c(&lt;span style="color:#bb60d5">%arg0&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!llvm.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg1&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!llvm.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg2&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!llvm.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>&amp;gt; {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg3&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg4&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}, &lt;span style="color:#bb60d5">%arg5&lt;/span>&lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span> {&lt;span style="">tt&lt;/span>.&lt;span style="">divisibility&lt;/span> = &lt;span style="color:#40a070">16&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>}) &lt;span style="color:#007020;font-weight:bold">attributes&lt;/span> {&lt;span style="">nvvm&lt;/span>.&lt;span style="">kernel&lt;/span> = &lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">u&lt;/span>&lt;span style="color:#007020;font-weight:bold">i1&lt;/span>, &lt;span style="">nvvm&lt;/span>.&lt;span style="">maxntid&lt;/span> = &lt;span style="color:#40a070">128&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="">sym_visibility&lt;/span> = &lt;span style="color:#4070a0">&amp;#34;public&amp;#34;&lt;/span>} {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %0 = &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="">addressof&lt;/span> @global_smem &lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!llvm.ptr&lt;/span>&amp;lt;&lt;span style="">array&lt;/span>&amp;lt;&lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">x&lt;/span> &lt;span style="color:#007020;font-weight:bold">i8&lt;/span>&amp;gt;, &lt;span style="color:#40a070">3&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %1 = &lt;span style="">llvm&lt;/span>.&lt;span style="color:#007020;font-weight:bold">bitcast&lt;/span> %0 &lt;span style="">:&lt;/span> &lt;span style="color:#bb60d5">!llvm.ptr&lt;/span>&amp;lt;&lt;span style="">array&lt;/span>&amp;lt;&lt;span style="color:#40a070">0&lt;/span> &lt;span style="color:#007020;font-weight:bold">x&lt;/span> &lt;span style="color:#007020;font-weight:bold">i8&lt;/span>&amp;gt;, &lt;span style="color:#40a070">3&lt;/span>&amp;gt; &lt;span style="color:#007020;font-weight:bold">to&lt;/span> &lt;span style="color:#bb60d5">!llvm.ptr&lt;/span>&amp;lt;&lt;span style="color:#007020;font-weight:bold">i8&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %2 = &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span>(&lt;span style="color:#40a070">3&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %3 = &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span>(&lt;span style="color:#40a070">1&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %4 = &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span>(&lt;span style="color:#40a070">0&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %5 = &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span>(&lt;span style="color:#40a070">2&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %6 = &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span>(&lt;span style="color:#007020;font-weight:bold">true&lt;/span>) &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %7 = &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span>(&lt;span style="color:#40a070">32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">inde&lt;/span>&lt;span style="color:#007020;font-weight:bold">x&lt;/span>) &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %8 = &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span>(&lt;span style="color:#40a070">32&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>) &lt;span style="">:&lt;/span> &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> %9 = &lt;span style="">llvm&lt;/span>.&lt;span style="">mlir&lt;/span>.&lt;span style="color:#007020;font-weight:bold">constant&lt;/span>(&lt;span style="color:#40a070">0.000000e+00&lt;/span> &lt;span style="">:&lt;/span> &lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>) &lt;span style="">:&lt;/span> &lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %567 = &lt;span style="">llvm&lt;/span>.&lt;span style="">inline_&lt;/span>&lt;span style="color:#007020;font-weight:bold">asm&lt;/span> &lt;span style="">has_side_effects&lt;/span> &lt;span style="">asm_dialect&lt;/span> = &lt;span style="">att&lt;/span> &lt;span style="">operand_attrs&lt;/span> = [] &lt;span style="color:#4070a0">&amp;#34;ldmatrix.sync.aligned.m8n8.x4.shared.b16 { $0, $1, $2, $3 }, [ $4 + 0 ];&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;=r,=r,=r,=r,r&amp;#34;&lt;/span> %566 &lt;span style="">:&lt;/span> (&lt;span style="color:#bb60d5">!llvm.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">16&lt;/span>, &lt;span style="color:#40a070">3&lt;/span>&amp;gt;) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="color:#bb60d5">!llvm.struct&lt;/span>&amp;lt;(&lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;)&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %765 = &lt;span style="">llvm&lt;/span>.&lt;span style="">inline_&lt;/span>&lt;span style="color:#007020;font-weight:bold">asm&lt;/span> &lt;span style="">has_side_effects&lt;/span> &lt;span style="">asm_dialect&lt;/span> = &lt;span style="">att&lt;/span> &lt;span style="">operand_attrs&lt;/span> = [] &lt;span style="color:#4070a0">&amp;#34;mma.sync.aligned.m16n8k16.row.col.f32.f16.f16.f32 { $0, $1, $2, $3 }, { $4, $5, $6, $7 }, { $8, $9 }, { $10, $11, $12, $13 };&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;=r,=r,=r,=r,r,r,r,r,r,r,0,1,2,3&amp;#34;&lt;/span> %677, %679, %678, %680, %685, %686, %701, %702, %703, %704 &lt;span style="">:&lt;/span> (&lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">vect&lt;/span>&lt;span style="color:#007020;font-weight:bold">or&lt;/span>&amp;lt;&lt;span style="color:#40a070">2&lt;/span>&lt;span style="">xf&lt;/span>&lt;span style="color:#40a070">16&lt;/span>&amp;gt;, &lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="color:#bb60d5">!llvm.struct&lt;/span>&amp;lt;(&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>)&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#d8d8d8">&lt;span> %1789 = &lt;span style="">llvm&lt;/span>.&lt;span style="">inline_&lt;/span>&lt;span style="color:#007020;font-weight:bold">asm&lt;/span> &lt;span style="">has_side_effects&lt;/span> &lt;span style="">asm_dialect&lt;/span> = &lt;span style="">att&lt;/span> &lt;span style="">operand_attrs&lt;/span> = [] &lt;span style="color:#4070a0">&amp;#34;@$5 st.global.v4.b32 [ $4 + 0 ], { $0, $1, $2, $3 };&amp;#34;&lt;/span>, &lt;span style="color:#4070a0">&amp;#34;r,r,r,r,l,b&amp;#34;&lt;/span> %1782, %1784, %1786, %1788, %1449, %6 &lt;span style="">:&lt;/span> (&lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#007020;font-weight:bold">i32&lt;/span>, &lt;span style="color:#bb60d5">!llvm.ptr&lt;/span>&amp;lt;&lt;span style="">f&lt;/span>&lt;span style="color:#40a070">32&lt;/span>, &lt;span style="color:#40a070">1&lt;/span>&amp;gt;, &lt;span style="color:#007020;font-weight:bold">i1&lt;/span>) &lt;span style="">-&lt;/span>&amp;gt; &lt;span style="color:#bb60d5">!llvm.void&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>About me</title><link>/posts/about/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>/posts/about/</guid><description>&lt;h2 id="about-me">About me&lt;/h2>
&lt;p>Thank you for your interest.&lt;/p>
&lt;p>I am a Deep Learning system architect at NVIDIA, and my current focus is high-performance AI Compiler(on GPU).&lt;/p>
&lt;p>Before this, I was a senior engineer in Baidu, working as an architect on PaddlePaddle (one of the most popular open-sourced deep learning frameworks in China market).&lt;/p>
&lt;p>I was the creator &amp;amp; primary author &amp;amp; tech lead of the following projects in PaddlePaddle ecosystem (before 2022-6)&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/PaddlePaddle/Paddle/tree/v2.3.2/paddle/fluid/inference">Paddle-Inference&lt;/a> - the server-class DL inference engine,&lt;/li>
&lt;li>&lt;a href="https://github.com/PaddlePaddle/Paddle-Lite/tree/v2.11">Paddle-Lite&lt;/a> - A on-device inference engine with high-performance, tiny deployment size,&lt;/li>
&lt;li>&lt;a href="https://github.com/PaddlePaddle/CINN">Paddle-CINN&lt;/a> - A DL compiler for automatically generating high-performance kernels &amp;amp; programs for AI models,&lt;/li>
&lt;li>&lt;a href="https://github.com/PaddlePaddle/Paddle/tree/v2.3.2/paddle/infrt">Paddle/infrt&lt;/a> - A unified architecture for both server-class and mobile devices, powered by MLIR, highly modular design,&lt;/li>
&lt;li>&lt;a href="https://github.com/PaddlePaddle/VisualDL">Paddle-VisualDL&lt;/a> - A visualization tool for AI model,&lt;/li>
&lt;li>&lt;a href="https://github.com/PaddlePaddle/continuous_evaluation">Paddle/continuous_evaluation&lt;/a> - A system that continuously traces the indicators modeling the performance of AI models.&lt;/li>
&lt;/ul></description></item><item><title>Emacs Essentials</title><link>/posts/emacs-essentials/</link><pubDate>Sat, 15 Oct 2022 00:00:00 +0000</pubDate><guid>/posts/emacs-essentials/</guid><description>&lt;p>It is a steep learning curve to master Emacs lisp, there are mainly two issues in it from my experience&lt;/p>
&lt;ol>
&lt;li>the lisp syntax and functional programming&lt;/li>
&lt;li>the fragmented methods and libraries&lt;/li>
&lt;/ol>
&lt;p>For the 1st issue, it is easy to master the syntax after writing several programs and getting used to them, but for the 2nd one, one needs to take notes or remember something.&lt;/p>
&lt;p>In this blog, I focus on the 2nd point and keep updating the notes of some methods and libraries that I think are essential for writing Emacs lisp packages.&lt;/p>
&lt;h2 id="builtin-methods">builtin methods&lt;/h2>
&lt;h3 id="buffer">buffer&lt;/h3>
&lt;h4 id="current-buffer-get-the-current-buffer">current-buffer: get the current buffer&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">current-buffer&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="get-buffer-get-a-buffer-by-name">get-buffer: get a buffer by name&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">get-buffer&lt;/span> &lt;span style="color:#4070a0">&amp;#34;*scratch*&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="get-buffer-create-create-the-buffer-if-not-exist">get-buffer-create: create the buffer if not exist&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">get-buffer-create&lt;/span> &lt;span style="color:#4070a0">&amp;#34;yaya&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="changing-the-current-buffer">changing the current buffer&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">progn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">set-buffer&lt;/span> (&lt;span style="color:#06287e">get-buffer&lt;/span> &lt;span style="color:#4070a0">&amp;#34;*scratch*&amp;#34;&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">current-buffer&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="goto-a-buffer">Goto a buffer&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">with-current-buffer&lt;/span> &lt;span style="color:#4070a0">&amp;#34;*BUF*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">;; do something like progn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="changing-the-current-buffer-safely">Changing the current buffer safely&lt;/h4>
&lt;p>It will return to the original buffer after the operation finished.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">progn&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#007020">save-current-buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">set-buffer&lt;/span> &lt;span style="color:#4070a0">&amp;#34;*scratch*&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">message&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Current buffer: %s&amp;#34;&lt;/span> (&lt;span style="color:#06287e">current-buffer&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">current-buffer&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="working-with-file-buffers">Working with file buffers&lt;/h4>
&lt;p>To get the full file path for the file that the buffer represents&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">buffer-file-name&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To find a buffer that represents a particular file&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">get-file-buffer&lt;/span> &lt;span style="color:#4070a0">&amp;#34;/Users/yanchunwei/project/myblog2022/content-org/emacs-essentials.org&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="loading-a-file-into-a-buffer-without-display-it">Loading a file into a buffer without display it&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">find-file-noselect&lt;/span> &lt;span style="color:#4070a0">&amp;#34;xx.org&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="get-all-buffer-names">Get all buffer names&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">mapcar&lt;/span> &lt;span style="color:#06287e">#&amp;#39;buffer-name&lt;/span> (&lt;span style="color:#06287e">buffer-list&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="point">point&lt;/h3>
&lt;p>The &amp;ldquo;point&amp;rdquo; is the location of the cursor in the buffer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">point&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">point-max&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">point-min&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="moving-the-point">Moving the point&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">goto-char&lt;/span> &lt;span style="color:#40a070">1&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">goto-char&lt;/span> (&lt;span style="color:#06287e">point-max&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">;; goto the begining of the buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">beginning-of-buffer&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#60a0b0;font-style:italic">;; goto the end of the buffer&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">end-of-buffer&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">forward-char&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">forward-char&lt;/span> &lt;span style="color:#40a070">5&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">forward-word&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">backward-word&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="preserving-the-point">Preserving the point&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">save-excursion&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">goto-char&lt;/span> (&lt;span style="color:#06287e">point-max&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">point&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="examining-buffer-text">Examining buffer text&lt;/h4>
&lt;p>To look at text in the buffer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">char-after&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">char-after&lt;/span> (&lt;span style="color:#06287e">point&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">char-after&lt;/span> (&lt;span style="color:#06287e">point-min&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="the-thing">The Thing&lt;/h4>
&lt;p>The &lt;code>thing-at-point&lt;/code> function is very useful for grabbing the text at the point if it matches a particular type of &amp;ldquo;thing&amp;rdquo;.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">thing-at-point&lt;/span> &lt;span style="color:#517918">&amp;#39;word&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">thing-at-point&lt;/span> &lt;span style="color:#517918">&amp;#39;sentence&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">thing-at-point&lt;/span> &lt;span style="color:#517918">&amp;#39;sentence&lt;/span> &lt;span style="color:#60add5">t&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="serching-for-text">Serching for text&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">search-forward&lt;/span> &lt;span style="color:#4070a0">&amp;#34;thing&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="inserting-text">Inserting text&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">insert&lt;/span> &lt;span style="color:#4070a0">&amp;#34;000&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#06287e">insert&lt;/span> &lt;span style="color:#4070a0">&amp;#34;\n&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;This is&amp;#34;&lt;/span> &lt;span style="color:#4070a0">?\s&lt;/span> &lt;span style="color:#4070a0">?\n&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Sparta!&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="deleting-text">Deleting text&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">with-current-buffer&lt;/span> &lt;span style="color:#4070a0">&amp;#34;.gitignore&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">delete-region&lt;/span> (&lt;span style="color:#06287e">point&lt;/span>) (&lt;span style="color:#06287e">point-max&lt;/span>)))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="saving-a-buffer">Saving a buffer&lt;/h4>
&lt;p>To save the contents of a buffer back to the file it is associated with&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">save-buffer&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="org-element">org-element&lt;/h3>
&lt;h3 id="file-and-path">file and path&lt;/h3>
&lt;h4 id="get-the-path-of-the-current-file">Get the path of the current file&lt;/h4>
&lt;p>The &lt;code>buffer-file-name&lt;/code> is a buffer builtin variable holding the file name of the current buffer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">file-truename&lt;/span> &lt;span style="color:#06287e">buffer-file-name&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="get-path-without-suffix">Get path without suffix&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">file-name-sans-extension&lt;/span> &lt;span style="color:#4070a0">&amp;#34;/tmp/a.org&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="write-to-file">Write to file&lt;/h4>
&lt;p>Overwrite the content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">with-temp-file&lt;/span> &lt;span style="color:#4070a0">&amp;#34;/tmp/1.org&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">insert&lt;/span> &lt;span style="color:#4070a0">&amp;#34;hello world&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">message&lt;/span> &lt;span style="color:#4070a0">&amp;#34;file content: %s&amp;#34;&lt;/span> (&lt;span style="color:#06287e">buffer-string&lt;/span>))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="execute-shell-command">execute shell command&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#bb60d5">shell-command&lt;/span> &lt;span style="color:#4070a0">&amp;#34;echo hello&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="modern-libraries">Modern libraries&lt;/h2>
&lt;h3 id="ht-dot-el-for-hashtables">ht.el for hashtables&lt;/h3>
&lt;p>Reference &lt;a href="https://github.com/Wilfred/ht.el">ht.el&lt;/a> for more details.&lt;/p>
&lt;h4 id="creating-a-hash-table">creating a hash table&lt;/h4>
&lt;p>Create an empty hash table&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">let*&lt;/span> ((&lt;span style="color:#bb60d5">the-dic&lt;/span> (&lt;span style="color:#bb60d5">ht-create&lt;/span>)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">the-dic&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a hash table with initial records&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">let*&lt;/span> ((&lt;span style="color:#bb60d5">the-dic&lt;/span> (&lt;span style="color:#bb60d5">ht&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#4070a0">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Tom&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#4070a0">&amp;#34;sex&amp;#34;&lt;/span> &lt;span style="color:#517918">&amp;#39;male&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">the-dic&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="accessing-the-hash-table">accessing the hash table&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">let*&lt;/span> ((&lt;span style="color:#bb60d5">the-dic&lt;/span> (&lt;span style="color:#bb60d5">ht&lt;/span> (&lt;span style="color:#4070a0">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Tom&amp;#34;&lt;/span>) (&lt;span style="color:#4070a0">&amp;#34;sex&amp;#34;&lt;/span> &lt;span style="color:#517918">&amp;#39;male&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">;; get a record&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">;; returns &amp;#34;Tom&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#bb60d5">ht-get&lt;/span> &lt;span style="color:#bb60d5">the-dic&lt;/span> &lt;span style="color:#4070a0">&amp;#34;name&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="iterating-over-the-hash-table">Iterating over the hash table&lt;/h4>
&lt;p>Readonly mapping:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">let*&lt;/span> ((&lt;span style="color:#bb60d5">the-dic&lt;/span> (&lt;span style="color:#bb60d5">ht&lt;/span> (&lt;span style="color:#4070a0">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Tom&amp;#34;&lt;/span>) (&lt;span style="color:#4070a0">&amp;#34;sex&amp;#34;&lt;/span> &lt;span style="color:#517918">&amp;#39;male&lt;/span>) (&lt;span style="color:#4070a0">&amp;#34;age&amp;#34;&lt;/span> &lt;span style="color:#40a070">18&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#bb60d5">ht-map&lt;/span> (&lt;span style="color:#007020">lambda&lt;/span> (&lt;span style="color:#bb60d5">key&lt;/span> &lt;span style="color:#bb60d5">value&lt;/span>) (&lt;span style="color:#06287e">message&lt;/span> &lt;span style="color:#4070a0">&amp;#34;%S: %S&amp;#34;&lt;/span> &lt;span style="color:#bb60d5">key&lt;/span> &lt;span style="color:#bb60d5">value&lt;/span>)) &lt;span style="color:#bb60d5">the-dic&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> )
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Mutable mapping:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f0f0f0;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-emacs-lisp" data-lang="emacs-lisp">&lt;span style="display:flex;">&lt;span>(&lt;span style="color:#007020">let*&lt;/span> ((&lt;span style="color:#bb60d5">the-dic&lt;/span> (&lt;span style="color:#bb60d5">ht&lt;/span> (&lt;span style="color:#4070a0">&amp;#34;name&amp;#34;&lt;/span> &lt;span style="color:#4070a0">&amp;#34;Tom&amp;#34;&lt;/span>) (&lt;span style="color:#4070a0">&amp;#34;sex&amp;#34;&lt;/span> &lt;span style="color:#517918">&amp;#39;male&lt;/span>) (&lt;span style="color:#4070a0">&amp;#34;age&amp;#34;&lt;/span> &lt;span style="color:#40a070">18&lt;/span>))))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#bb60d5">ht-map&lt;/span> (&lt;span style="color:#007020">lambda&lt;/span> (&lt;span style="color:#bb60d5">key&lt;/span> &lt;span style="color:#bb60d5">value&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#60a0b0;font-style:italic">;; modify the value if is string&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#007020">setf&lt;/span> &lt;span style="color:#bb60d5">value&lt;/span> (&lt;span style="color:#007020">if&lt;/span> (&lt;span style="color:#06287e">stringp&lt;/span> &lt;span style="color:#bb60d5">value&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (&lt;span style="color:#06287e">concat&lt;/span> &lt;span style="color:#4070a0">&amp;#34;modified &amp;#34;&lt;/span> &lt;span style="color:#bb60d5">value&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#bb60d5">value&lt;/span>))) &lt;span style="color:#bb60d5">the-dic&lt;/span>))
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>